[{"path":[]},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_condensed_filtered.html","id":"load-in-the-data","dir":"Articles","previous_headings":"Data Set 1: Amide Data","what":"Load in the Data","title":"malbacR: A Vignette Pertaining to Pre-Filtered Data","text":"pmartR friendly version “Amide” data already undergone filtering log2 transformations already implemented within malbacR. Therefore, simply load data.","code":"data(pmart_amideFilt)"},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_condensed_filtered.html","id":"run-batch-correction-methods","dir":"Articles","previous_headings":"Data Set 1: Amide Data","what":"Run Batch Correction Methods","title":"malbacR: A Vignette Pertaining to Pre-Filtered Data","text":"“Amide” data set contains information regarding quality control samples. Therefore following methods can used: Range Scaling Power Scaling Pareto Scaling TIGER EigenMS WaveICA2.0 SERRF ComBat QCRLSC QCRFSC important note data pmart_amideFilt filtered, transformed, imputed data runs possible methods, may conservative given method. example, methods require imputation run, methods require imputation (like SERRF WaveICA2.0) (Fan et al. 2019; Deng et al. 2019), data imputed. data currently log2 scale, therefore, data must converted abundance values following methods: SERRF, TIGER, QC-RFSC, WaveICA.","code":"# SCALING METHODS # range scaling amide_range <- bc_range(omicsData = pmart_amideFilt)  # power scaling amide_power <- bc_power(omicsData = pmart_amideFilt)  # pareto scaling amide_pareto <- bc_pareto(omicsData = pmart_amideFilt)  # QUALITY CONTROL METHODS # TIGER pmart_amideFilt_abundance <- edata_transform(omicsData = pmart_amideFilt, data_scale = \"abundance\") amide_tiger_abundance <- bc_tiger(omicsData = pmart_amideFilt_abundance,sampletype_cname = \"group\",                         test_val = \"QC\",injection_cname = \"Injection_order\",group_cname = \"group\") amide_tiger <- edata_transform(omicsData = amide_tiger_abundance, data_scale = \"log2\")  # QC-RLSC amide_qcrlsc <- bc_qcrlsc(omicsData = pmart_amideFilt,block_cname = \"batch\",                           qc_cname = \"group\", qc_val = \"QC\", order_cname = \"Injection_order\",                           missing_thresh = 0.5, rsd_thresh = 0.3, backtransform  = FALSE,keep_qc = FALSE)  # SERRF amide_serrf_abundance <- bc_serrf(omicsData = pmart_amideFilt_abundance,sampletype_cname = \"group\",test_val = \"QC\",group_cname = \"group\") amide_serrf <- edata_transform(omicsData = amide_serrf_abundance, data_scale = \"log2\")  # OTHER METHODS # ComBat amide_combat <- bc_combat(omicsData = pmart_amideFilt, use_groups = FALSE)  # EigenMS amide_eigen <- bc_eigenMS(omicsData = pmart_amideFilt)  # WaveICA2.0 amide_wave_abundance <- bc_waveica(omicsData = pmart_amideFilt_abundance, injection_cname = \"Injection_order\",                          version = \"WaveICA2.0\", alpha = 0, cutoff_injection = 0.1, K = 10,                          negative_to_na = TRUE) amide_wave <- edata_transform(omicsData = amide_wave_abundance, data_scale = \"log2\")  # QC-RFSC amide_qcrfsc_abundance <- bc_qcrfsc(omicsData = pmart_amideFilt_abundance,qc_cname = \"group\",qc_val = \"QC\",                           order_cname = \"Injection_order\",ntree = 500, keep_qc = FALSE,group_cname = \"group\") amide_qcrfsc <- edata_transform(amide_qcrfsc_abundance, data_scale = \"log2\")"},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_condensed_filtered.html","id":"data-visualization","dir":"Articles","previous_headings":"Data Set 1: Amide Data","what":"Data Visualization","title":"malbacR: A Vignette Pertaining to Pre-Filtered Data","text":"obtaining different batch corrected data sets, can plot PPCA see successfully returning batch corrected data. set group_designation use batch information main_effects color data batch. code run using functions pmartR demonstrating utility two packages.","code":"p1 <- plot(dim_reduction(omicsData = pmart_amideFilt),omicsData = pmart_amide,color_by = \"batch\") + labs(title = \"Amide: Unadjusted\") p2 <- plot(dim_reduction(omicsData = amide_range),omicsData = amide_range,color_by = \"batch\") + labs(title = \"Amide: Range\") p3 <- plot(dim_reduction(omicsData = amide_power),omicsData = amide_power,color_by = \"batch\") + labs(title = \"Amide: Power\") p4 <- plot(dim_reduction(omicsData = amide_pareto),omicsData = amide_pareto,color_by = \"batch\") + labs(title = \"Amide: Pareto\") p5 <- plot(dim_reduction(omicsData = amide_tiger),omicsData = amide_tiger,color_by = \"batch\") + labs(title = \"Amide: TIGER\") p6 <- plot(dim_reduction(omicsData = amide_qcrlsc),omicsData = amide_qcrlsc,color_by = \"batch\") + labs(title = \"Amide: QC-RLSC\") p7 <- plot(dim_reduction(omicsData = amide_combat),omicsData = amide_combat,color_by = \"batch\") + labs(title = \"Amide: ComBat\") p8 <- plot(dim_reduction(omicsData = amide_wave),omicsData = amide_wave,color_by = \"batch\") + labs(title = \"Amide: WaveICA2.0\") p9 <- plot(dim_reduction(omicsData = amide_serrf),omicsData = amide_serrf,color_by = \"batch\") + labs(title = \"Amide: SERRF\") p10 <- plot(dim_reduction(omicsData = amide_qcrfsc),omicsData = amide_qcrfsc,color_by = \"batch\") + labs(title = \"Amide: QC-RFSC\") p11 <- plot(dim_reduction(omicsData = amide_eigen),omicsData = amide_eigen,color_by = \"batch\") + labs(title = \"Amide: EigenMS\")  p1;p2;p3;p4;p5;p6;p7;p8;p9;p10;p11"},{"path":[]},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_condensed_filtered.html","id":"load-in-the-data-1","dir":"Articles","previous_headings":"Data Set 2: Mix Data","what":"Load in the Data","title":"malbacR: A Vignette Pertaining to Pre-Filtered Data","text":"malbacR package includes another pmartR friendly data set “mix” data already undergone filtering log2 transformations already implemented within malbacR. Therefore, simply load data.","code":"data(pmart_mixFilt)"},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_condensed_filtered.html","id":"run-batch-correction-methods-1","dir":"Articles","previous_headings":"Data Set 2: Mix Data","what":"Run Batch Correction Methods","title":"malbacR: A Vignette Pertaining to Pre-Filtered Data","text":"“mix” data set contains information regarding negative controls/internal standards. Therefore following methods can used: Range Scaling Power Scaling Pareto Scaling RUV-random NOMIS ComBat information regarding QC samples injection order, batch correction methods package able used data set. pmart_amideFilt data set, important note data pmart_mixFilt filtered transformed data runs possible methods, may conservative given method. missing data “mix” data set, imputation computed. data currently log2 scale, therefore, data must converted abundance values following methods: NOMIS WaveICA.","code":"# SCALING METHODS # range scaling mix_range <- bc_range(omicsData = pmart_mixFilt)  # pareto scaling mix_pareto <- bc_pareto(omicsData = pmart_mixFilt)  # power scaling mix_power <- bc_power(omicsData = pmart_mixFilt)  # INTERNAL STANDARDS/NEGATIVE CONTROLS # RUV-random mix_ruv <- bc_ruvRandom(omicsData = pmart_mixFilt, nc_cname = \"tag\",nc_val = \"IS\", k = 3)  # NOMIS pmart_mixFilt_abundance <- edata_transform(omicsData = pmart_mixFilt, data_scale = \"abundance\") mix_nomis_abundance <- bc_nomis(omicsData = pmart_mixFilt_abundance, is_cname = \"tag\", is_val = \"IS\") mix_nomis <- edata_transform(omicsData = mix_nomis_abundance, data_scale = \"log2\")  # OTHER METHODS mix_combat <- bc_combat(omicsData = pmart_mixFilt)  mix_waveica_abundance <- bc_waveica(omicsData = pmart_mixFilt_abundance,batch_cname = \"BatchNum\",                                     version = \"WaveICA\",alpha = 0, K = 20, cutoff_batch = 0.05,                                      cutoff_group = 0.05,negative_to_na = TRUE) ## ######Decomposition 1 ######## ## ######Decomposition 2 ######## ## ######Decomposition 3 ######## ## ######Decomposition 4 ######## ## ######Decomposition 5 ######## ## ######Decomposition 6 ######## ## ######Decomposition 7 ######## ## ######Decomposition 8 ######## ## ######Decomposition 9 ######## ## ######Decomposition 10 ######## ## ######Decomposition 11 ######## ## ######Decomposition 12 ######## ## ######Decomposition 13 ######## ## ######Decomposition 14 ######## ## ######Decomposition 15 ######## ## ######Decomposition 16 ######## ## ######Decomposition 17 ######## ## ######Decomposition 18 ######## ## ######Decomposition 19 ######## ## ######Decomposition 20 ######## ## ######Decomposition 21 ######## ## ######Decomposition 22 ######## ## ######Decomposition 23 ######## ## ######Decomposition 24 ######## ## ######Decomposition 25 ######## ## ######Decomposition 26 ######## ## ######Decomposition 27 ######## ## ######Decomposition 28 ######## ## ######Decomposition 29 ######## ## ######Decomposition 30 ######## ## ######Decomposition 31 ######## ## ######Decomposition 32 ######## ## ######Decomposition 33 ######## ## ######Decomposition 34 ######## ## ######Decomposition 35 ######## ## ######Decomposition 36 ######## ## ######Decomposition 37 ######## ## ######Decomposition 38 ######## ## ######Decomposition 39 ######## ## ######Decomposition 40 ######## ## ######Decomposition 41 ######## ## ######Decomposition 42 ######## ## ######Decomposition 43 ######## ## ######Decomposition 44 ######## ## ######Decomposition 45 ######## ## ######Decomposition 46 ######## ## ######### ICA 1 ############# ## [1] \"Removing 0 components with P value less than 0.05\" ## ######### ICA 2 ############# ## [1] \"Removing 10 components with P value less than 0.05\" ## ######### ICA 3 ############# ## [1] \"Removing 13 components with P value less than 0.05\" ## ######### ICA 4 ############# ## [1] \"Removing 11 components with P value less than 0.05\" ## ######### ICA 5 ############# ## [1] \"Removing 19 components with P value less than 0.05\" ## ######### ICA 6 ############# ## [1] \"Removing 1 components with P value less than 0.05\" ## ######Reconstruction 1 ######## ## ######Reconstruction 2 ######## ## ######Reconstruction 3 ######## ## ######Reconstruction 4 ######## ## ######Reconstruction 5 ######## ## ######Reconstruction 6 ######## ## ######Reconstruction 7 ######## ## ######Reconstruction 8 ######## ## ######Reconstruction 9 ######## ## ######Reconstruction 10 ######## ## ######Reconstruction 11 ######## ## ######Reconstruction 12 ######## ## ######Reconstruction 13 ######## ## ######Reconstruction 14 ######## ## ######Reconstruction 15 ######## ## ######Reconstruction 16 ######## ## ######Reconstruction 17 ######## ## ######Reconstruction 18 ######## ## ######Reconstruction 19 ######## ## ######Reconstruction 20 ######## ## ######Reconstruction 21 ######## ## ######Reconstruction 22 ######## ## ######Reconstruction 23 ######## ## ######Reconstruction 24 ######## ## ######Reconstruction 25 ######## ## ######Reconstruction 26 ######## ## ######Reconstruction 27 ######## ## ######Reconstruction 28 ######## ## ######Reconstruction 29 ######## ## ######Reconstruction 30 ######## ## ######Reconstruction 31 ######## ## ######Reconstruction 32 ######## ## ######Reconstruction 33 ######## ## ######Reconstruction 34 ######## ## ######Reconstruction 35 ######## ## ######Reconstruction 36 ######## ## ######Reconstruction 37 ######## ## ######Reconstruction 38 ######## ## ######Reconstruction 39 ######## ## ######Reconstruction 40 ######## ## ######Reconstruction 41 ######## ## ######Reconstruction 42 ######## ## ######Reconstruction 43 ######## ## ######Reconstruction 44 ######## ## ######Reconstruction 45 ######## ## ######Reconstruction 46 ######## mix_waveica <- edata_transform(omicsData = mix_waveica_abundance, data_scale = \"log2\")"},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_condensed_filtered.html","id":"mix-data-visualization","dir":"Articles","previous_headings":"Data Set 2: Mix Data","what":"Mix: Data Visualization","title":"malbacR: A Vignette Pertaining to Pre-Filtered Data","text":"Similar previous data set, can compare PCA plots unadjusted adjusted data sets.","code":"p1 <- plot(dim_reduction(omicsData = pmart_mixFilt),omicsData = pmart_mixFilt,color_by = \"BatchNum\") + labs(title = \"Mix: Unadjusted\") p2 <- plot(dim_reduction(omicsData = mix_ruv),omicsData = mix_ruv,color_by = \"BatchNum\") + labs(title = \"Mix: ruv-Random\") p3 <- plot(dim_reduction(omicsData = mix_nomis),omicsData = mix_nomis,color_by = \"BatchNum\") + labs(title = \"Mix: NOMIS\") p4 <- plot(dim_reduction(omicsData = mix_combat),omicsData = mix_combat,color_by = \"BatchNum\") + labs(title = \"Mix: ComBat\") p5 <- plot(dim_reduction(omicsData = mix_range),omicsData = mix_range,color_by = \"BatchNum\") + labs(title = \"Mix: Range\") p6 <- plot(dim_reduction(omicsData = mix_power),omicsData = mix_power,color_by = \"BatchNum\") + labs(title = \"Mix: Power\") p7 <- plot(dim_reduction(omicsData = mix_pareto),omicsData = mix_pareto,color_by = \"BatchNum\") + labs(title = \"Mix: Pareto\") p8 <- plot(dim_reduction(omicsData = mix_waveica),omicsData = mix_waveica,color_by = \"BatchNum\") + labs(title = \"Mix: WaveICA\")  p1;p2;p3;p4;p5;p6;p7;p8"},{"path":[]},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_expanded_unfiltered.html","id":"data-set-1-amide-data","dir":"Articles","previous_headings":"","what":"Data Set 1: Amide Data","title":"malbacR: A Vignette Pertaining to Unfiltered Data","text":"first data set malbacR, pmart_amide, Amide data set originally found package WaveICA2.0 (Deng Li 2022). metabolomics data set ran three batches. random subset Amide data, 500 molecules 642 samples. data set contains information samples regarding batch, group, Quality Control (QC) samples, injection order. Using information, can run batch correction data using following methods: range scaling (Berg et al. 2006), power scaling (Berg et al. 2006), pareto scaling (Berg et al. 2006), ComBat (Müller et al. 2016), EigenMS (Karpievitch et al. 2014), QC-RLSC (Dunn et al. 2011), TIGER (Han et al. 2022), WaveICA2.0 (Deng et al. 2019). e_meta information negative controls internal standards, NOMIS (Sysi-Aho et al. 2007) RUV-random (De Livera et al. 2015) run.","code":""},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_expanded_unfiltered.html","id":"load-in-the-data","dir":"Articles","previous_headings":"Data Set 1: Amide Data","what":"Load in the Data","title":"malbacR: A Vignette Pertaining to Unfiltered Data","text":"pmartR friendly version Amide data already implemented within malbacR. Therefore, simply need load data. running batch correction, run pre-processing steps. First specify group designation data group main_effects batch batch_id. Next, create version data log2 transformed, methods (methods) require data log scale. Additionally, create normalized version data using global median. done using functions group_designation, edata_transform, normalize_global respectively within pmartR (Degnan et al. 2023).","code":"data(pmart_amide) pmart_amide <- group_designation(pmart_amide,main_effects = \"group\",batch_id = \"batch\") pmart_amide_log <- edata_transform(pmart_amide,\"log2\") pmart_amide_norm <- normalize_global(pmart_amide_log,subset_fn = \"all\",norm_fn = \"median\",                                 apply_norm = TRUE,backtransform = TRUE)"},{"path":[]},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_expanded_unfiltered.html","id":"scaling-methods","dir":"Articles","previous_headings":"Data Set 1: Amide Data > Run Batch Correction Methods","what":"Scaling Methods","title":"malbacR: A Vignette Pertaining to Unfiltered Data","text":"correct batch effects using range, power, pareto scaling, use functions bc_range, bc_power, bc_pareto respectively. three functions simply simply take parameter omicsData S3 data object compatible within pmartR. scaling methods ran using log2 abundance values normalized.","code":"# range scaling amide_range <- bc_range(omicsData = pmart_amide_log)  # power scaling amide_power <- bc_power(omicsData = pmart_amide_log)  # pareto scaling amide_pareto <- bc_pareto(omicsData = pmart_amide_log)"},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_expanded_unfiltered.html","id":"qc-based-methods","dir":"Articles","previous_headings":"Data Set 1: Amide Data > Run Batch Correction Methods","what":"QC-Based Methods","title":"malbacR: A Vignette Pertaining to Unfiltered Data","text":"batch correction methods rely Quality Control (QC) samples including TIGER, QC-RLSC, QC-RFSC SERRF. run TIGER (Technical variation elImination ensemble learninG architEctuRe) (Han et al. 2022), run function bc_tiger use following parameters: omicsData, sampletype_cname (column f_data specifies sample QC sample ), test_val (value sampletype_cname specifies QC sample), injection_cname (column f_data specifies injection order), group_cname (column f_data specifies groups used statistical analyses). TIGER requires least one sample QC samples complete data every molecule least one sample non-QC samples complete data every molecule (Han et al. 2022). reason, include function, tiger_filter, finds combination QC sample non-QC sample fewest number missing molecules determine molecules need removed. Using additional function apply_tigerFilt, apply filter obtain S3 object capable working within pmartR malbacR. Although subset data already capable undergoing TIGER batch correction least one QC sample least one non-QC sample missing values, show functions work general. TIGER ran raw abundance values. running batch correction, transform data log2 scale. QC-RLSC (Quality Control - Robust Loess Signal Correction) (Dunn et al. 2011) can ran using bc_qcrlsc takes parameters omicsData, block_cname (column f_data specifies column contains batch information), qc_cname (column f_data specifies sample QC sample ), qc_val (value qc_cname specifies QC sample), order_cname (column f_data specifies run order samples). Additionally, user can specify missing_thresh (minimum proportion observed biomolecules QC samples), rsd_thresh, whether user wants backtransform data . , users can specify whether like retain QC samples final output specifying keep_qc TRUE FALSE. QC-RLSC ran log2 abundance values normalized. next QC method malbacR SERRF (Systematic Error Removal using Random Forest) (Fan et al. 2019) uses function bc_serrf. function utilizes parameters omicsData, sampletype_cname, test_val, group_cname meanings within bc_tiger. One thing note SERRF method requires complete observations (Fan et al. 2019). means either remove molecules missing values impute using Expectation Maximization algorithm. Although reasons avoid imputation particularly proteomics data (B.-J. Webb-Robertson et al. 2011), acknowledge cases imputation necessary. Therefore, include imputation function returns e_data undergone imputation. officially apply pmartR S3 object, user runs apply_imputation, similar procedure tiger_filter apply_tigerFilt. important note SERRF ran raw abundance values, imputation conducted log2 data. Therefore, users must impute data using log2 data. imputed, users can return raw abundance value run batch correction. running batch correction, log2 transform data . final QC method malbacR QC-RFSC (Quality Control - Random Forest Signal Correction) (Luan et al. 2018) can ran using bc_qcrfsc takes parameters. QC-RFSC following arguments omicsData, qc_cname, qc_val, keep_qc Injection_order meaning arguments QC-RLSC. Additionally, QC-RFSC requires group_cname ntree (number trees created running random forest). Similar SERRF, QC-RFSC requires complete observations, ran raw abundance values (Luan et al. 2018). SERRF, log2 transform data, impute data, transform back raw abundance values run QC-RFSC. compare results, suggested users convert data back log2 scale batch correction.","code":"tigerFilt <- tiger_filter(pmart_amide,sampletype_cname = \"group\",test_val = \"QC\") pmart_amideFilt <- apply_tigerFilt(tigerFilt,pmart_amide) amide_tiger_abundance <- bc_tiger(omicsData = pmart_amideFilt,sampletype_cname = \"group\",                         test_val = \"QC\",injection_cname = \"Injection_order\",group_cname = \"group\") amide_tiger <- edata_transform(omicsData = amide_tiger_abundance, data_scale = \"log2\") amide_qcrlsc <- bc_qcrlsc(omicsData = pmart_amide_log,block_cname = \"batch\",                           qc_cname = \"group\", qc_val = \"QC\", order_cname = \"Injection_order\",                           missing_thresh = 0.5, rsd_thresh = 0.3, backtransform  = FALSE,keep_qc = FALSE) impObj <- imputation(omicsData = pmart_amide_log) amide_imp_log <- apply_imputation(impObj,pmart_amide_log) amide_imp_raw <- edata_transform(amide_imp_log,\"abundance\") amide_serrf_abundance <- bc_serrf(omicsData = amide_imp_raw,sampletype_cname = \"group\",test_val = \"QC\",group_cname = \"group\") amide_serrf <- edata_transform(omicsData = amide_serrf_abundance,data_scale = \"log2\") amide_qcrfsc_abundance <- bc_qcrfsc(omicsData = amide_imp_raw,qc_cname = \"group\",qc_val = \"QC\",                                     order_cname = \"Injection_order\",group_cname = \"group\",                                     ntree = 500, keep_qc = FALSE) amide_qcrfsc <- edata_transform(omicsData = amide_qcrfsc_abundance,data_scale = \"log2\")"},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_expanded_unfiltered.html","id":"other-methods","dir":"Articles","previous_headings":"Data Set 1: Amide Data > Run Batch Correction Methods","what":"Other Methods","title":"malbacR: A Vignette Pertaining to Unfiltered Data","text":"methods utilize scaling approach use QC samples. One method ComBat relies Empirical Bayesian analysis (Müller et al. 2016). ComBat can ran using bc_combat taking parameter omicsData. However, function run, user must normalized data using normalize_global added batch ID using group_designation within pmartR. , optional parameter use_groups defaults FALSE. set TRUE, ComBat run using batch group information rather just batch information. ComBat ran log2 transformed data also normalized. EigenMS uses function bc_eigenMS takes parameter omicsData. parameter, also required S3 object undergone group designation using function group_designation pmartR. However, main_effects group information needs addressed batch_id necessary. contrast bc_combat requires batch_id. EigenMS ran data log2 transformed, normalized. final method demonstrate using “Amide” data WaveICA uses function bc_waveica. Within function users can either run WaveICA WaveICA2.0 specifying parameter version either “WaveICA” “WaveICA2.0”. default “WaveICA”. WaveICA, users need specify following parameters: omicsData, batch_cname (column f_data batch information), well alpha (tradeoff value independence samples variables ICA), cutoff_batch (threshold variation explained batch independent components), cutoff_group (threshold variation explained groups independent components), K (maximal component ICA decomposes). defaults alpha, cutoff_injection, K, cutoff_batch, cutoff_group 0, 10, 0.05, 0.05 respectively. WaveICA2.0, users use parameters exception specifying injection_cname (column f_data injection order information) rather batch_cname. Additionally, users specify cutoff_injection (threshold variation explained injection order independent components) rather cutoff_batch cutoff_groups values. Like SERRF QC-RFSC, WaveICA WaveICA2.0 requires complete observations raw abundance values (Deng et al. 2019). Therefore, use imputed data set already created follow similar procedure log2 transforming data impute data, converting back raw abundance values run batch correction. batch correction, log2 transform data back . noted WaveICA can yield negative raw abundance values. converting log2 scale, values become NA may impact downstream analyses. Users can choose specify negative_to_na TRUE abundance values negative returned NA.","code":"# combat batch correction amide_combat <- bc_combat(omicsData = pmart_amide_norm, use_groups = FALSE) amide_eigen <- bc_eigenMS(omicsData = pmart_amide_log) amide_wave_abundance <- bc_waveica(omicsData = amide_imp_raw, batch_cname = \"batch\",                          version = \"WaveICA2.0\",                          injection_cname = \"Injection_order\",alpha = 0,                          cutoff_injection = 0.1, K = 10,                          negative_to_na = TRUE) amide_wave <- edata_transform(omicsData = amide_wave_abundance, data_scale = \"log2\")"},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_expanded_unfiltered.html","id":"amide-data-visualization","dir":"Articles","previous_headings":"Data Set 1: Amide Data","what":"Amide: Data Visualization","title":"malbacR: A Vignette Pertaining to Unfiltered Data","text":"obtaining different batch corrected data sets, can plot PPCA (B.-J. M. Webb-Robertson et al. 2013) see successfully returning batch corrected data. set group_designation use batch information main_effects color data batch. code run using functions pmartR demonstrating utility two packages. data set batch effects tend produce PPCA distinct clusters batch. good batch effect correction method reduce distinct clusters. Using logic, ComBat, EigenMS, WaveICA2.0, SERRF perform best within data set.","code":"p1 <- plot(dim_reduction(omicsData = pmart_amide_log),omicsData = pmart_amide,color_by = \"batch\") + labs(title = \"Amide: Unadjusted\") p2 <- plot(dim_reduction(omicsData = amide_range),omicsData = amide_range,color_by = \"batch\") + labs(title = \"Amide: Range\") p3 <- plot(dim_reduction(omicsData = amide_power),omicsData = amide_power,color_by = \"batch\") + labs(title = \"Amide: Power\") p4 <- plot(dim_reduction(omicsData = amide_pareto),omicsData = amide_pareto,color_by = \"batch\") + labs(title = \"Amide: Pareto\") p5 <- plot(dim_reduction(omicsData = amide_tiger),omicsData = amide_tiger,color_by = \"batch\") + labs(title = \"Amide: TIGER\") p6 <- plot(dim_reduction(omicsData = amide_qcrlsc),omicsData = amide_qcrlsc,color_by = \"batch\") + labs(title = \"Amide: QC-RLSC\") p7 <- plot(dim_reduction(omicsData = amide_combat),omicsData = amide_combat,color_by = \"batch\") + labs(title = \"Amide: ComBat\") p8 <- plot(dim_reduction(omicsData = amide_wave),omicsData = amide_wave,color_by = \"batch\") + labs(title = \"Amide: WaveICA2.0\") p9 <- plot(dim_reduction(omicsData = amide_serrf),omicsData = amide_serrf,color_by = \"batch\") + labs(title = \"Amide: SERRF\") p10 <- plot(dim_reduction(omicsData = amide_qcrfsc),omicsData = amide_qcrfsc,color_by = \"batch\") + labs(title = \"Amide: QC-RFSC\") p11 <- plot(dim_reduction(omicsData = amide_eigen),omicsData = amide_eigen,color_by = \"batch\") + labs(title = \"Amide: EigenMS\")  p1;p2;p3;p4;p5;p6;p7;p8;p9;p10;p11"},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_expanded_unfiltered.html","id":"data-set-2-mix-data","dir":"Articles","previous_headings":"","what":"Data Set 2: Mix Data","title":"malbacR: A Vignette Pertaining to Unfiltered Data","text":"now proceed second data set. experiments designed manner, batch correction methods may apply every data set. pmart_mix based data set mix crmn package (Redestig et al. 2009). metabolomics data set ran three batches. 46 molecules 42 samples. data set contains sample information regarding batch well molecule information regarding internal standards/negative controls.","code":""},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_expanded_unfiltered.html","id":"load-in-the-data-1","dir":"Articles","previous_headings":"Data Set 2: Mix Data","what":"Load in the Data","title":"malbacR: A Vignette Pertaining to Unfiltered Data","text":"pmartR friendly version mix data already implemented within malbacR. Therefore, simply need load data. running batch correction, set group designation. group information, specify batch number BatchNum main_effects effect batch_id workaround. Additionally, create log2 transformed version data well normalized version data using global median centering. data set missing values imputation necessary method. methods already demonstrated can used data set well range scaling, power scaling, pareto scaling, ComBat. QC samples data QC-RLSC, QC-RFSC, TIGER, SERRF ran. addition, injection order information means insufficient data run WaveICA2.0. also group information (BatchNum placed main_effects placeholder) thus EigenMS ran. Additionally, ComBat ran batch information group information.","code":"data(pmart_mix) pmart_mix <- group_designation(pmart_mix,main_effects = \"BatchNum\",batch_id = \"BatchNum\") pmart_mix_log <- edata_transform(pmart_mix,\"log2\") pmart_mix_norm <- normalize_global(pmart_mix_log,subset_fn = \"all\",norm_fn = \"median\",                                 apply_norm = TRUE,backtransform = TRUE)"},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_expanded_unfiltered.html","id":"internal-standardsnegative-controls-methods","dir":"Articles","previous_headings":"Data Set 2: Mix Data > Load in the Data","what":"Internal Standards/Negative Controls Methods","title":"malbacR: A Vignette Pertaining to Unfiltered Data","text":"two main batch correction methods data set RUV-random NOMIS. data already complete, need run imputation. However important note methods require complete observations Sysi-Aho et al. (2007). first method use “mix” data set RUV-random utilizes function bc_ruvRandom takes parameters omicsData, nc_cname (column e_meta information negative controls - use tag internal standards negative control), nc_val (value within nc_cname negative control value), k (number factors unwanted variation) RUV-random ran log2 transformed data normalized. method uses information found e_meta NOMIS uses function bc_nomis takes parameters omicsData, is_cname (column e_meta information internal standards), is_val (value within is_cname value internal standards) NOMIS ran raw abundance values. missing values, data need imputed. However, missing values, similar procedure done SERRF amide data, required.","code":"mix_ruv <- bc_ruvRandom(omicsData = pmart_mix_log, nc_cname = \"tag\",nc_val = \"IS\", k = 3) ## Warning: Using one column matrices in `filter()` was deprecated in dplyr 1.1.0. ## ℹ Please use one dimensional logical vectors instead. ## ℹ The deprecated feature was likely used in the malbacR package. ##   Please report the issue to the authors. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. mix_nomis_abundance <- bc_nomis(omicsData = pmart_mix, is_cname = \"tag\", is_val = \"IS\") mix_nomis <- edata_transform(omicsData = mix_nomis_abundance, data_scale = \"log2\")"},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_expanded_unfiltered.html","id":"other-methods-1","dir":"Articles","previous_headings":"Data Set 2: Mix Data > Load in the Data","what":"Other Methods","title":"malbacR: A Vignette Pertaining to Unfiltered Data","text":"also run applicable methods used “Amide” data set range scaling, pareto scaling, power scaling, ComBat. Additionally, WaveICA can ran (just WaveICA2.0) relies batch information rather injection order.","code":"mix_combat <- bc_combat(omicsData = pmart_mix_norm) mix_range <- bc_range(omicsData = pmart_mix_log) mix_pareto <- bc_pareto(omicsData = pmart_mix_log) mix_power <- bc_power(omicsData = pmart_mix_log) mix_waveica_abundance <- bc_waveica(omicsData = pmart_mix,batch_cname = \"BatchNum\",                           version = \"WaveICA\",cutoff_batch = 0.05, cutoff_group = 0.05,                           negative_to_na = TRUE) ## ######Decomposition 1 ######## ## ######Decomposition 2 ######## ## ######Decomposition 3 ######## ## ######Decomposition 4 ######## ## ######Decomposition 5 ######## ## ######Decomposition 6 ######## ## ######Decomposition 7 ######## ## ######Decomposition 8 ######## ## ######Decomposition 9 ######## ## ######Decomposition 10 ######## ## ######Decomposition 11 ######## ## ######Decomposition 12 ######## ## ######Decomposition 13 ######## ## ######Decomposition 14 ######## ## ######Decomposition 15 ######## ## ######Decomposition 16 ######## ## ######Decomposition 17 ######## ## ######Decomposition 18 ######## ## ######Decomposition 19 ######## ## ######Decomposition 20 ######## ## ######Decomposition 21 ######## ## ######Decomposition 22 ######## ## ######Decomposition 23 ######## ## ######Decomposition 24 ######## ## ######Decomposition 25 ######## ## ######Decomposition 26 ######## ## ######Decomposition 27 ######## ## ######Decomposition 28 ######## ## ######Decomposition 29 ######## ## ######Decomposition 30 ######## ## ######Decomposition 31 ######## ## ######Decomposition 32 ######## ## ######Decomposition 33 ######## ## ######Decomposition 34 ######## ## ######Decomposition 35 ######## ## ######Decomposition 36 ######## ## ######Decomposition 37 ######## ## ######Decomposition 38 ######## ## ######Decomposition 39 ######## ## ######Decomposition 40 ######## ## ######Decomposition 41 ######## ## ######Decomposition 42 ######## ## ######Decomposition 43 ######## ## ######Decomposition 44 ######## ## ######Decomposition 45 ######## ## ######Decomposition 46 ######## ## ######### ICA 1 ############# ## [1] \"Removing 2 components with P value less than 0.05\" ## ######### ICA 2 ############# ## [1] \"Removing 20 components with P value less than 0.05\" ## ######### ICA 3 ############# ## [1] \"Removing 17 components with P value less than 0.05\" ## ######### ICA 4 ############# ## [1] \"Removing 1 components with P value less than 0.05\" ## ######### ICA 5 ############# ## [1] \"Removing 13 components with P value less than 0.05\" ## ######### ICA 6 ############# ## [1] \"Removing 12 components with P value less than 0.05\" ## ######Reconstruction 1 ######## ## ######Reconstruction 2 ######## ## ######Reconstruction 3 ######## ## ######Reconstruction 4 ######## ## ######Reconstruction 5 ######## ## ######Reconstruction 6 ######## ## ######Reconstruction 7 ######## ## ######Reconstruction 8 ######## ## ######Reconstruction 9 ######## ## ######Reconstruction 10 ######## ## ######Reconstruction 11 ######## ## ######Reconstruction 12 ######## ## ######Reconstruction 13 ######## ## ######Reconstruction 14 ######## ## ######Reconstruction 15 ######## ## ######Reconstruction 16 ######## ## ######Reconstruction 17 ######## ## ######Reconstruction 18 ######## ## ######Reconstruction 19 ######## ## ######Reconstruction 20 ######## ## ######Reconstruction 21 ######## ## ######Reconstruction 22 ######## ## ######Reconstruction 23 ######## ## ######Reconstruction 24 ######## ## ######Reconstruction 25 ######## ## ######Reconstruction 26 ######## ## ######Reconstruction 27 ######## ## ######Reconstruction 28 ######## ## ######Reconstruction 29 ######## ## ######Reconstruction 30 ######## ## ######Reconstruction 31 ######## ## ######Reconstruction 32 ######## ## ######Reconstruction 33 ######## ## ######Reconstruction 34 ######## ## ######Reconstruction 35 ######## ## ######Reconstruction 36 ######## ## ######Reconstruction 37 ######## ## ######Reconstruction 38 ######## ## ######Reconstruction 39 ######## ## ######Reconstruction 40 ######## ## ######Reconstruction 41 ######## ## ######Reconstruction 42 ######## ## ######Reconstruction 43 ######## ## ######Reconstruction 44 ######## ## ######Reconstruction 45 ######## ## ######Reconstruction 46 ######## ## Warning in Ops.factor(left, right): '<' not meaningful for factors mix_waveica <- edata_transform(omicsData = mix_waveica_abundance, data_scale = \"log2\")"},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_expanded_unfiltered.html","id":"mix-data-visualization","dir":"Articles","previous_headings":"Data Set 2: Mix Data","what":"Mix: Data Visualization","title":"malbacR: A Vignette Pertaining to Unfiltered Data","text":"Similar previous data set, can compare PPCA plots unadjusted adjusted data sets. Using qualitative logic “Amide” data set, appears NOMIS, ComBat, WaveICA performs well based PPCA clustering.","code":"p1 <- plot(dim_reduction(omicsData = pmart_mix_log),omicsData = pmart_mixFilt,color_by = \"BatchNum\") + labs(title = \"Mix: Unadjusted\") p2 <- plot(dim_reduction(omicsData = mix_ruv),omicsData = mix_ruv,color_by = \"BatchNum\") + labs(title = \"Mix: ruv-Random\") p3 <- plot(dim_reduction(omicsData = mix_nomis),omicsData = mix_nomis,color_by = \"BatchNum\") + labs(title = \"Mix: NOMIS\") p4 <- plot(dim_reduction(omicsData = mix_combat),omicsData = mix_combat,color_by = \"BatchNum\") + labs(title = \"Mix: ComBat\") p5 <- plot(dim_reduction(omicsData = mix_range),omicsData = mix_range,color_by = \"BatchNum\") + labs(title = \"Mix: Range\") p6 <- plot(dim_reduction(omicsData = mix_power),omicsData = mix_power,color_by = \"BatchNum\") + labs(title = \"Mix: Power\") p7 <- plot(dim_reduction(omicsData = mix_pareto),omicsData = mix_pareto,color_by = \"BatchNum\") + labs(title = \"Mix: Pareto\") p8 <- plot(dim_reduction(omicsData = mix_waveica),omicsData = mix_pareto,color_by = \"BatchNum\") + labs(title = \"Mix: WaveICA\")  p1;p2;p3;p4;p5;p6;p7;p8"},{"path":[]},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_rank_becas.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"malbacR: A Vignette Pertaining to Ranking BECAS","text":"R package malbacR package deals batch correction methods small molecule omics data. works conjunction pmartR, R package designed preprocessing, filtering, analyzing multi-omics data (Stratton et al. 2019; Degnan et al. 2023). outline demonstrates use function rank_becas inside malbacR package. function allows users rank batch correction methods based multiple commonly used metrics, coefficient variation distance centroids batch clusters PCA. Additionally, incorporate new metric robust data strong biological signal well data may strong signal - difference R2m/R2c batch corrected data unnormalized data. First load necessary libraries malbacR package pmartR (Degnan et al. 2023) malbacR works compatibly. Additionally, ggplot2 loaded slight graphical manipulations. load pmart_amide data set package malbacR originally found package WaveICA2.0 (Deng Li 2022). run general pre-processing steps use functions pmartR assigning group designation, log2 transforming data, run median centering normalization. run eight different BECAs using corresponding functions malbacR using preferred data input (.e. log2 transformed raw abundance values, normalized data unnormalized data) specific BECA. Missing values imputed BECAs require complete data. methods (QC-RFSC, TIGER, SERRF) remove QC samples process, remove samples methods well. create named list becas contains pmartR objects 8 different BECAs compared.","code":"library(malbacR) library(pmartR) library(ggplot2) data(pmart_amide) pmart_amide <- group_designation(pmart_amide,main_effects = \"group\",batch_id = \"batch\") pmart_amide_log <- edata_transform(pmart_amide,\"log2\") pmart_amide_norm <- normalize_global(pmart_amide_log,subset_fn = \"all\",norm_fn = \"median\",                                 apply_norm = TRUE,backtransform = TRUE) # range scaling amide_range <- bc_range(omicsData = pmart_amide_log)  # power scaling amide_power <- bc_power(omicsData = pmart_amide_log)  # pareto scaling amide_pareto <- bc_pareto(omicsData = pmart_amide_log)  # tiger tigerFilt <- tiger_filter(pmart_amide,sampletype_cname = \"group\",test_val = \"QC\") pmart_amideFilt <- apply_tigerFilt(tigerFilt,pmart_amide) amide_tiger_abundance <- bc_tiger(omicsData = pmart_amideFilt,sampletype_cname = \"group\",                         test_val = \"QC\",injection_cname = \"Injection_order\",group_cname = \"group\") amide_tiger <- edata_transform(omicsData = amide_tiger_abundance, data_scale = \"log2\")  # serrf impObj <- imputation(omicsData = pmart_amide_log) amide_imp_log <- apply_imputation(impObj,pmart_amide_log) amide_imp_raw <- edata_transform(amide_imp_log,\"abundance\")  amide_serrf_abundance <- bc_serrf(omicsData = amide_imp_raw,sampletype_cname = \"group\",test_val = \"QC\",group_cname = \"group\") amide_serrf <- edata_transform(omicsData = amide_serrf_abundance,data_scale = \"log2\")  # qcrfsc amide_qcrfsc_abundance <- bc_qcrfsc(omicsData = amide_imp_raw,qc_cname = \"group\",qc_val = \"QC\",                                     order_cname = \"Injection_order\",group_cname = \"group\",                                     ntree = 500, keep_qc = FALSE) amide_qcrfsc <- edata_transform(omicsData = amide_qcrfsc_abundance,data_scale = \"log2\")  # combat amide_combat <- bc_combat(omicsData = pmart_amide_norm, use_groups = FALSE)  # eigenMS amide_eigen <- bc_eigenMS(omicsData = pmart_amide_log) qc_samples <- pmart_amide_log$f_data$SampleID[which(pmart_amide_log$f_data$group == \"QC\")]  cfilt <- pmartR::custom_filter(amide_combat, f_data_remove = qc_samples) amide_combat <- pmartR::applyFilt(cfilt,amide_combat)  cfilt <- pmartR::custom_filter(amide_eigen, f_data_remove = qc_samples) amide_eigen <- pmartR::applyFilt(cfilt,amide_eigen)  cfilt <- pmartR::custom_filter(amide_power, f_data_remove = qc_samples) amide_power <- pmartR::applyFilt(cfilt,amide_power)  cfilt <- pmartR::custom_filter(amide_pareto, f_data_remove = qc_samples) amide_pareto <- pmartR::applyFilt(cfilt,amide_pareto)  cfilt <- pmartR::custom_filter(amide_range, f_data_remove = qc_samples) amide_range <- pmartR::applyFilt(cfilt,amide_range) becas = list(Power = amide_power, Pareto = amide_pareto, Range = amide_range,              ComBat = amide_combat, EigenMS = amide_eigen,              QCRFSC = amide_qcrfsc, TIGER = amide_tiger, SERRF = amide_serrf)"},{"path":"https://pmartr.github.io/malbacR/articles/malbacR_vignette_rank_becas.html","id":"ranking-becas","dir":"Articles","previous_headings":"","what":"Ranking BECAs","title":"malbacR: A Vignette Pertaining to Ranking BECAS","text":"rank methods three different potential metrics: coefficient variation (CV), distance batch clusters PCA, difference R2m/R2c batch corrected data unnormalized data. metric utilizes mixed effect model molecule determines conditional marginal R2 values based method introduced Nakagawa Schielzeth (Nakagawa Schielzeth 2012). subtracts ratio marginal R2 conditional R2 unnormalized dataset ratio batch corrected data determines median value. general, recommend final metric robust data large biological signal well data less biological signal. rank data using function rank_becas malbacR. function five arguments: omicsData_beca_list: named list pmartR objects batch corrected data comparison_method: string supplying metric used compare BECAs (cv coefficient variation, distance_pca distance clusters batches PCA, r2_diff difference R2m/R2c batch corrected data unnormalized data) batch_effect_cname: string supplying column name f_data element pmartR object contains batch information sample main_effect_cname: string supplying column name f_data element pmartR object contains group/main effect information sample omicsData_unnormalized: pmartR object containing unnormalized data (required comparison_method r2_diff, otherwise default NULL) output function dataframe three columns. row dataframe corresponds one pmartR objects omicsData_beca_list. first column BECA corresponds names supplied named list omicsData_beca_list, second column Value value metric specific batch corrected dataset, final column Ranking simply integer 1 number datasets analyzed (1 best BECA based specific metric). First, rank BECAs using coefficient variation. Next, rank data based distance batch clusters PCA. Finally, rank data using difference R2m/R2c batch corrected data unnormalized data. becomes evident metrics contradict . example, using CV, Power Scaling becomes preferred BECA choice, ranked 6th 2 metrics. scenario, distance clusters difference R2m/R2c similar rankings strong biological signal within dataset. However, scenarios less signal main effect, distance PCA clusters likely underperform. contrast, difference R2m/R2c robust amount biological signal data.","code":"cv_rankings <- rank_becas(omicsData_beca_list = becas, comparison_method = \"cv\",                           batch_effect_cname = \"batch\", main_effect_cname = \"group\") cv_rankings ##      BECA  Value Ranking ## 1   Power  7.818       1 ## 2   Range 10.529       2 ## 3 EigenMS 39.976       3 ## 4   SERRF 43.358       4 ## 5  ComBat 46.881       5 ## 6   TIGER 47.648       6 ## 7  QCRFSC 50.567       7 ## 8  Pareto 62.897       8 pca_rankings <- rank_becas(omicsData_beca_list = becas, comparison_method = \"distance_pca\",                           batch_effect_cname = \"batch\", main_effect_cname = \"group\") pca_rankings ##      BECA Value Ranking ## 1  ComBat 0.012       1 ## 2 EigenMS 0.021       2 ## 3   SERRF 0.039       3 ## 4  QCRFSC 0.418       4 ## 5   TIGER 0.481       5 ## 6   Power 0.891       6 ## 7  Pareto 0.894       7 ## 8   Range 0.894       8 r2_rankings <- rank_becas(omicsData_beca_list = becas, comparison_method = \"r2_diff\",                           batch_effect_cname = \"batch\", main_effect_cname = \"group\",                           omicsData_unnormalized = pmart_amide_log) r2_rankings ##      BECA  Value Ranking ## 1  ComBat  0.991       1 ## 2 EigenMS  0.990       2 ## 3   SERRF  0.298       3 ## 4  QCRFSC  0.011       4 ## 5   TIGER  0.007       5 ## 6   Power -0.002       6 ## 7  Pareto -0.002       7 ## 8   Range -0.002       8"},{"path":[]},{"path":"https://pmartr.github.io/malbacR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Damon Leach. Author, maintainer. Kelly Stratton. Author. Lisa Bramer. Author.","code":""},{"path":"https://pmartr.github.io/malbacR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Leach D, Stratton K, Bramer L (2024). malbacR: Mass spectrometry ALgorigthms BAtch Correction. R package version 0.1.0, https://pmartr.github.io/malbacR/.","code":"@Manual{,   title = {malbacR: Mass spectrometry ALgorigthms for BAtch Correction},   author = {Damon Leach and Kelly Stratton and Lisa Bramer},   year = {2024},   note = {R package version 0.1.0},   url = {https://pmartr.github.io/malbacR/}, }"},{"path":"https://pmartr.github.io/malbacR/index.html","id":"malbacr","dir":"","previous_headings":"","what":"Mass spectrometry ALgorigthms for BAtch Correction","title":"Mass spectrometry ALgorigthms for BAtch Correction","text":"R package provides functionality batch correction methods mass spectrometry (MS) omics data. includes Pareto Scaling, Power Scaling, Range Scaling, ComBat, EigenMS, RUV-random, NOMIS, QC-RLSC, WaveICA2.0, SERRF, TIGER). Additional functions include imputation function (using expectation maximization algorithms) function filter data TIGER batch correction. Example data also provided package.","code":""},{"path":"https://pmartr.github.io/malbacR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation:","title":"Mass spectrometry ALgorigthms for BAtch Correction","text":"","code":"devtools::install_github(\"pmartR/malbacR\")"},{"path":"https://pmartr.github.io/malbacR/index.html","id":"problems-with-rcpparmadillo-and-gfortran-on-mac","dir":"","previous_headings":"Installation:","what":"Problems with rcppArmadillo and gfortran on mac","title":"Mass spectrometry ALgorigthms for BAtch Correction","text":"malbacR depends pmartR. problem causes pmartR fail compiling cpp code, something rcppArmadillo certain installations gfortran. See posts try explain issue: 1 2 3. Two solutions found: CRAN-approved resource build tools mac lists two versions gfortran install . Catalina 10.15.7 downloaded installed gfortran 8.2 link provided blog post using homebrew gfortran installation, add line FLIBS = -L`gfortran -print-file-name=libgfortran.dylib | xargs dirname` ~/.R/Makevars (plain text file extention)","code":""},{"path":"https://pmartr.github.io/malbacR/index.html","id":"tutorial","dir":"","previous_headings":"","what":"Tutorial:","title":"Mass spectrometry ALgorigthms for BAtch Correction","text":"get started, see package documentation function reference located .","code":""},{"path":"https://pmartr.github.io/malbacR/index.html","id":"data","dir":"","previous_headings":"","what":"Data:","title":"Mass spectrometry ALgorigthms for BAtch Correction","text":"Example peptide (filtered unfiltered versions) two metabolite datasets. first data set (pmart_amide/pmart_amideFilt) subset dataset originally came R package WaveICA2.0 can found . second dataset (pmart_mix/pmart_mixFilt) originally came R package crmn can found .","code":""},{"path":"https://pmartr.github.io/malbacR/reference/Internal.compute_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal.compute_cor — Internal.compute_cor","title":"Internal.compute_cor — Internal.compute_cor","text":"function internal function compute correlation","code":""},{"path":"https://pmartr.github.io/malbacR/reference/Internal.compute_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal.compute_cor — Internal.compute_cor","text":"","code":"Internal.compute_cor(   train_num,   test_num = NULL,   selectVar_corType = c(\"pcor\", \"cor\"),   selectVar_corMethod = c(\"spearman\", \"pearson\") )"},{"path":"https://pmartr.github.io/malbacR/reference/Internal.compute_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal.compute_cor — Internal.compute_cor","text":"return correlation computed","code":""},{"path":"https://pmartr.github.io/malbacR/reference/Internal.compute_errorRatio.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal.compute_errorRatio — Internal.compute_errorRatio","title":"Internal.compute_errorRatio — Internal.compute_errorRatio","text":"function internal function compute error ratio","code":""},{"path":"https://pmartr.github.io/malbacR/reference/Internal.compute_errorRatio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal.compute_errorRatio — Internal.compute_errorRatio","text":"","code":"Internal.compute_errorRatio(rawVal, sampleType, targetVal)"},{"path":"https://pmartr.github.io/malbacR/reference/Internal.compute_errorRatio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal.compute_errorRatio — Internal.compute_errorRatio","text":"return computed error ratio","code":""},{"path":"https://pmartr.github.io/malbacR/reference/Internal.compute_targetVal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal.compute_targetVal — Internal.compute_targetVal","title":"Internal.compute_targetVal — Internal.compute_targetVal","text":"function internal function compute target values","code":""},{"path":"https://pmartr.github.io/malbacR/reference/Internal.compute_targetVal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal.compute_targetVal — Internal.compute_targetVal","text":"","code":"Internal.compute_targetVal(   input_col,   targetVal_method = c(\"median\", \"mean\"),   targetVal_removeOutlier = TRUE )"},{"path":"https://pmartr.github.io/malbacR/reference/Internal.compute_targetVal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal.compute_targetVal — Internal.compute_targetVal","text":"return computed target values","code":""},{"path":"https://pmartr.github.io/malbacR/reference/Internal.createFolds.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal.createFolds — Internal.createFolds","title":"Internal.createFolds — Internal.createFolds","text":"function internal function create folds testing/training data","code":""},{"path":"https://pmartr.github.io/malbacR/reference/Internal.createFolds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal.createFolds — Internal.createFolds","text":"","code":"Internal.createFolds(y, k = 10, list = TRUE, returnTrain = FALSE)"},{"path":"https://pmartr.github.io/malbacR/reference/Internal.createFolds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal.createFolds — Internal.createFolds","text":"data split test/training partitions","code":""},{"path":"https://pmartr.github.io/malbacR/reference/Internal.remove_NA.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal.remove_NA — Internal.remove_NA","title":"Internal.remove_NA — Internal.remove_NA","text":"function internal function remove NA values","code":""},{"path":"https://pmartr.github.io/malbacR/reference/Internal.remove_NA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal.remove_NA — Internal.remove_NA","text":"","code":"Internal.remove_NA(   input_data_num,   data_label = NULL,   replace_with_zero = FALSE )"},{"path":"https://pmartr.github.io/malbacR/reference/Internal.remove_NA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal.remove_NA — Internal.remove_NA","text":"data NA values removed","code":""},{"path":"https://pmartr.github.io/malbacR/reference/Internal.run_ensemble.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal.run_ensemble — Internal.run_ensemble","title":"Internal.run_ensemble — Internal.run_ensemble","text":"function internal function run ensemble learning","code":""},{"path":"https://pmartr.github.io/malbacR/reference/Internal.run_ensemble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal.run_ensemble — Internal.run_ensemble","text":"","code":"Internal.run_ensemble(   trainSet,   testSet,   mtry_percent = seq(0.2, 0.8, 0.2),   nodesize_percent = seq(0.2, 0.8, 0.2),   ...,   return_base_res = FALSE )"},{"path":"https://pmartr.github.io/malbacR/reference/Internal.run_ensemble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal.run_ensemble — Internal.run_ensemble","text":"return ensemble learning","code":""},{"path":"https://pmartr.github.io/malbacR/reference/apply_imputation.html","id":null,"dir":"Reference","previous_headings":"","what":"apply_imputation — apply_imputation","title":"apply_imputation — apply_imputation","text":"function returns pmart object undergone imputation","code":""},{"path":"https://pmartr.github.io/malbacR/reference/apply_imputation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"apply_imputation — apply_imputation","text":"","code":"apply_imputation(imputeData, omicsData)"},{"path":"https://pmartr.github.io/malbacR/reference/apply_imputation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"apply_imputation — apply_imputation","text":"imputeData object class imputeData contains imputed e_data determined using function 'imputation' omicsData object class 'pepData', 'proData', 'metabData', 'lipidData', 'nmrData', usually created .pepData, .proData, .metabData, .lipidData, .nmrData, respectively.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/apply_imputation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"apply_imputation — apply_imputation","text":"object pmartR object containing imputated e_data","code":""},{"path":"https://pmartr.github.io/malbacR/reference/apply_imputation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"apply_imputation — apply_imputation","text":"Evan Martin, Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/apply_imputation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"apply_imputation — apply_imputation","text":"","code":"library(malbacR) data(\"pmart_amide\") library(pmartR) pmart_amide <- edata_transform(pmart_amide,\"log2\") impFilt <- imputation(pmart_amide) imputed_data <- apply_imputation(impFilt,pmart_amide)"},{"path":"https://pmartr.github.io/malbacR/reference/apply_tigerFilt.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a S3 tiger filter object to a pmartR S3 object — apply_tigerFilt","title":"Apply a S3 tiger filter object to a pmartR S3 object — apply_tigerFilt","text":"function takes filter object class 'tigerFilt'    applies filter dataset pepData, proData,    lipidData, metabData, nmrData.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/apply_tigerFilt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a S3 tiger filter object to a pmartR S3 object — apply_tigerFilt","text":"","code":"apply_tigerFilt(filter_object, omicsData)"},{"path":"https://pmartr.github.io/malbacR/reference/apply_tigerFilt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a S3 tiger filter object to a pmartR S3 object — apply_tigerFilt","text":"filter_object object class 'tigerFilt' created tiger_filter omicsData object class pepData, proData, lipidData, metabData, nmrData usually created .pepData, .proData, .lipidData, .metabData, .nmrData, respectively.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/apply_tigerFilt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a S3 tiger filter object to a pmartR S3 object — apply_tigerFilt","text":"object class pepData, proData,  lipidData, metabData, nmrData specified cname_ids,   edata_cnames, emeta_cnames filtered appropriate datasets.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/apply_tigerFilt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Apply a S3 tiger filter object to a pmartR S3 object — apply_tigerFilt","text":"Lisa Bramer, Kelly Stratton,Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/apply_tigerFilt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a S3 tiger filter object to a pmartR S3 object — apply_tigerFilt","text":"","code":"library(pmartRdata) data(\"pmart_amide\") to_filter <- tiger_filter(omicsData = pmart_amide,sampletype_cname = \"group\", test_val = \"QC\") amideFilt <- apply_tigerFilt(filter_object = to_filter, omicsData = pep_object) #> There are no molecules that need to be removed. Returning the original omicsData"},{"path":"https://pmartr.github.io/malbacR/reference/bc_combat.html","id":null,"dir":"Reference","previous_headings":"","what":"ComBat adjusted object — bc_combat","title":"ComBat adjusted object — bc_combat","text":"function returns pmart object undergone ComBat batch effect correction","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_combat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ComBat adjusted object — bc_combat","text":"","code":"bc_combat(omicsData, use_groups = FALSE)"},{"path":"https://pmartr.github.io/malbacR/reference/bc_combat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ComBat adjusted object — bc_combat","text":"omicsData object class 'pepData', 'proData', 'metabData', 'lipidData', 'nmrData', usually created .pepData, .proData, .metabData, .lipidData, .nmrData, respectively. use_groups logical argument indicating group designation applied data batch correction. Defaults FALSE. TRUE, ComBat runs batch effect group designation","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_combat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ComBat adjusted object — bc_combat","text":"Object class omicsData undergone   ComBat batch effect correction","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_combat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ComBat adjusted object — bc_combat","text":"Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_combat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ComBat adjusted object — bc_combat","text":"","code":"library(malbacR) library(pmartR) data(\"pmart_amide\") pmart_amide <- edata_transform(pmart_amide,\"log2\") pmart_amide <- group_designation(pmart_amide,main_effects = \"group\",batch_id = \"batch\") pmart_amide <- normalize_global(pmart_amide,subset_fn = \"all\",norm_fn = \"median\",                                apply_norm = TRUE,backtransform = TRUE) amide_combat <- bc_combat(omicsData = pmart_amide, use_groups = FALSE) #> Found3batches #> Adjusting for0covariate(s) or covariate level(s) #> Found3562Missing Data Values  #> Standardizing Data across genes #> Fitting L/S model and finding priors #> Finding parametric adjustments #> Adjusting the Data"},{"path":"https://pmartr.github.io/malbacR/reference/bc_eigenMS.html","id":null,"dir":"Reference","previous_headings":"","what":"EigenMS adjusted object — bc_eigenMS","title":"EigenMS adjusted object — bc_eigenMS","text":"function returns pmart object undergone EigenMS normalization regarding batch effect correction","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_eigenMS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EigenMS adjusted object — bc_eigenMS","text":"","code":"bc_eigenMS(omicsData)"},{"path":"https://pmartr.github.io/malbacR/reference/bc_eigenMS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EigenMS adjusted object — bc_eigenMS","text":"omicsData object class 'pepData', 'proData', 'metabData', 'lipidData', 'nmrData', usually created .pepData, .proData, .metabData, .lipidData, .nmrData, respectively.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_eigenMS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EigenMS adjusted object — bc_eigenMS","text":"Object class omicsData undergone   EigenMS normalization","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_eigenMS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EigenMS adjusted object — bc_eigenMS","text":"Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_eigenMS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EigenMS adjusted object — bc_eigenMS","text":"","code":"library(malbacR) library(pmartR) data(\"pmart_amide\") pmart_amide <- edata_transform(pmart_amide,\"log2\") pmart_amide <- group_designation(pmart_amide,main_effects = \"group\",batch_id = \"batch\") amide_eigen <- bc_eigenMS(omicsData = pmart_amide) #> Data dimentions: 500642 #> Treatment groupselecting complete peptides #> Got 2+ treatment grps #> The following object is masked from TREATS (pos = 4): #>  #>     TREATS #> The following object is masked from TREATS (pos = 6): #>  #>     TREATS #> The following object is masked from TREATS (pos = 7): #>  #>     TREATS #> The following object is masked from TREATS (pos = 8): #>  #>     TREATS #> The following object is masked from TREATS (pos = 9): #>  #>     TREATS #> The following object is masked from TREATS (pos = 10): #>  #>     TREATS #> The following object is masked from TREATS (pos = 18): #>  #>     TREATS #> The following object is masked from TREATS (pos = 19): #>  #>     TREATS #> Computing SVD, estimating Eigentrends... #> Number of treatments: 3 #> Number of complete peptides (and samples) used in SVD #> 372642 #> Number of treatment groups (in svd.id): 3 #> Starting Bootstrap..... #> Iteration 50 #> Iteration 100 #> Iteration 150 #> Iteration 200 #> Iteration 250 #> Iteration 300 #> Iteration 350 #> Iteration 400 #> Iteration 450 #> Iteration 500 #> Number of bias trends automatically detected 8 #> Preparing to plot... #> Unique number of treatment combinations:3 #> Normalizing... #> Processing peptide 100 #> Processing peptide 200 #> Processing peptide 300 #> Processing peptide 400 #> Processing peptide 500 #> Done with normalization!!!"},{"path":"https://pmartr.github.io/malbacR/reference/bc_nomis.html","id":null,"dir":"Reference","previous_headings":"","what":"NOMIS normalized adjusted object — bc_nomis","title":"NOMIS normalized adjusted object — bc_nomis","text":"function returns pmart object undergone NOMIS normalization regarding batch effect correction","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_nomis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NOMIS normalized adjusted object — bc_nomis","text":"","code":"bc_nomis(omicsData, is_cname, is_val)"},{"path":"https://pmartr.github.io/malbacR/reference/bc_nomis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NOMIS normalized adjusted object — bc_nomis","text":"omicsData object class 'pepData', 'proData', 'metabData', 'lipidData', 'nmrData', usually created .pepData, .proData, .metabData, .lipidData, .nmrData, respectively. is_cname character string giving name column omicsData$e_meta contains factor variable indicating whether molecule internal standards is_val value giving name/value is_cname column indicates sample Internal Standards sample","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_nomis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NOMIS normalized adjusted object — bc_nomis","text":"Object class omicsData undergone   NOMIS normalization","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_nomis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"NOMIS normalized adjusted object — bc_nomis","text":"Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_nomis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NOMIS normalized adjusted object — bc_nomis","text":"","code":"library(malbacR) library(pmartR) data(\"pmart_mix\") pmart_mix <- group_designation(pmart_mix,main_effects = \"BatchNum\",batch_id = \"BatchNum\") mix_nomis_abundance <- bc_nomis(omicsData = pmart_mix, is_cname = \"tag\", is_val = \"IS\") #> Joining with `by = join_by(Metabolite)`"},{"path":"https://pmartr.github.io/malbacR/reference/bc_pareto.html","id":null,"dir":"Reference","previous_headings":"","what":"Pareto Scaling adjusted object — bc_pareto","title":"Pareto Scaling adjusted object — bc_pareto","text":"function returns pmart object undergone Pareto Scaling normalization","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_pareto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pareto Scaling adjusted object — bc_pareto","text":"","code":"bc_pareto(omicsData)"},{"path":"https://pmartr.github.io/malbacR/reference/bc_pareto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pareto Scaling adjusted object — bc_pareto","text":"omicsData object class 'pepData', 'proData', 'metabData', 'lipidData', 'nmrData', usually created .pepData, .proData, .metabData, .lipidData, .nmrData, respectively.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_pareto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pareto Scaling adjusted object — bc_pareto","text":"Object class omicsData undergone   Pareto Scaling Normalization batch effect correction","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_pareto.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pareto Scaling adjusted object — bc_pareto","text":"Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_pareto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pareto Scaling adjusted object — bc_pareto","text":"","code":"library(malbacR) library(pmartR) data(\"pmart_amide\") pmart_amide <- edata_transform(pmart_amide,\"log2\") pmart_amide <- group_designation(pmart_amide,main_effects = \"group\",batch_id = \"batch\") amide_pareto <- bc_pareto(omicsData = pmart_amide)"},{"path":"https://pmartr.github.io/malbacR/reference/bc_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Power Scaling adjusted object — bc_power","title":"Power Scaling adjusted object — bc_power","text":"function returns pmart object undergone Power Scaling normalization","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Power Scaling adjusted object — bc_power","text":"","code":"bc_power(omicsData)"},{"path":"https://pmartr.github.io/malbacR/reference/bc_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Power Scaling adjusted object — bc_power","text":"omicsData object class 'pepData', 'proData', 'metabData', 'lipidData', 'nmrData', usually created .pepData, .proData, .metabData, .lipidData, .nmrData, respectively.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Power Scaling adjusted object — bc_power","text":"Object class omicsData undergone   Power Scaling Normalization batch effect correction","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_power.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Power Scaling adjusted object — bc_power","text":"Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Power Scaling adjusted object — bc_power","text":"","code":"library(malbacR) library(pmartR) data(\"pmart_amide\") pmart_amide <- edata_transform(pmart_amide,\"log2\") pmart_amide <- group_designation(pmart_amide,main_effects = \"group\",batch_id = \"batch\") amide_power <- bc_power(omicsData = pmart_amide)"},{"path":"https://pmartr.github.io/malbacR/reference/bc_qcrfsc.html","id":null,"dir":"Reference","previous_headings":"","what":"QCRFSC batch correction — bc_qcrfsc","title":"QCRFSC batch correction — bc_qcrfsc","text":"function returns pmart object undergone QCRFSC  batch effect correction","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_qcrfsc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QCRFSC batch correction — bc_qcrfsc","text":"","code":"bc_qcrfsc(   omicsData,   qc_cname,   qc_val,   order_cname,   group_cname,   ntree = 500,   keep_qc = FALSE )"},{"path":"https://pmartr.github.io/malbacR/reference/bc_qcrfsc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QCRFSC batch correction — bc_qcrfsc","text":"omicsData object class 'pepData', 'proData', 'metabData', 'lipidData', 'nmrData', usually created .pepData, .proData, .metabData, .lipidData, .nmrData, respectively. qc_cname character string giving name column omicsData$f_data contains factor variable indicating whether sample QC qc_val character string giving value qc_cname column indicates QC sample order_cname character string giving name column omicsData$f_data contains run order group_cname character string giving name column omicsData$f_data contians group information ntree number trees grow random forest model (default set 500) keep_qc logical value determine whether include QC samples final output data (default set FALSE)","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_qcrfsc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"QCRFSC batch correction — bc_qcrfsc","text":"Object class omicsData undergone   QCRFSC normalization","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_qcrfsc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"QCRFSC batch correction — bc_qcrfsc","text":"QCRFSC ran raw abundance values. However, recommended  run imputation log2 scale. Therefore, using QCRFSC, encouraged transform data log2 scale imputation, transform data back raw abundance scale bc_qcrfsc","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_qcrfsc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"QCRFSC batch correction — bc_qcrfsc","text":"Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_qcrfsc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"QCRFSC batch correction — bc_qcrfsc","text":"","code":"library(malbacR) library(pmartR) data(\"pmart_amide\") pmart_amide <- edata_transform(pmart_amide,\"log2\") impObj <- imputation(omicsData = pmart_amide) amide_imp <- apply_imputation(imputeData = impObj, omicsData = pmart_amide) amide_imp_abund <- edata_transform(amide_imp,\"abundance\") amide_imp_abund <- group_designation(amide_imp_abund,main_effects = \"group\") amide_qcrfsc <- bc_qcrfsc(omicsData = amide_imp_abund,qc_cname = \"group\",qc_val = \"QC\",order_cname = \"Injection_order\",group_cname = \"group\", ntree = 500,keep_qc = FALSE)"},{"path":"https://pmartr.github.io/malbacR/reference/bc_qcrlsc.html","id":null,"dir":"Reference","previous_headings":"","what":"Run QC-RLSC Normalization — bc_qcrlsc","title":"Run QC-RLSC Normalization — bc_qcrlsc","text":"Obtain abundance values pmart object QC-RLSC Normalization","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_qcrlsc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run QC-RLSC Normalization — bc_qcrlsc","text":"","code":"bc_qcrlsc(   omicsData,   block_cname,   qc_cname,   qc_val,   order_cname,   missing_thresh = 0.5,   rsd_thresh = 0.3,   backtransform = FALSE,   keep_qc = FALSE )"},{"path":"https://pmartr.github.io/malbacR/reference/bc_qcrlsc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run QC-RLSC Normalization — bc_qcrlsc","text":"omicsData omicsData object (metabData, lipidData, pepData, proData) created using pmartR package, zero values already replaced NAs log transformation already applied block_cname character string giving name column omicsData$f_Data contains block (batch) information qc_cname character string giving name column omicsData$f_data contains factor variable indicating whether sample QC qc_val character string giving value qc_cname column indicates QC sample order_cname character string giving name column omicsData$f_data contains run order missing_thresh numeric threshold, 0 1, used filtering biomolecules. See details information. value 0.5 reasonable. rsd_thresh numeric threshold used filtering metabolites. See details information. value 0.3 reasonable. backtransform logical value indicated whether backtransform data put normalized data back scale original data. Defaults FALSE. TRUE, median y-values loess curve added normalized value biomolecule batch keep_qc logical value determine whether include QC samples final output data (default set FALSE)","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_qcrlsc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run QC-RLSC Normalization — bc_qcrlsc","text":"omicsData object class omicsData_filt, e_data contains QC-RLSC normalized values","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_qcrlsc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run QC-RLSC Normalization — bc_qcrlsc","text":"Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_qcrlsc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run QC-RLSC Normalization — bc_qcrlsc","text":"","code":"if (FALSE) { library(malbacR) library(pmartR) data(\"pmart_amide\") pmart_amide <- edata_transform(pmart_amide,\"log2\") pmart_amide <- group_designation(pmart_amide,main_effects = \"group\",batch_id = \"batch\") amide_qcrlsc <- bc_qcrlsc(omicsData = pmart_amide,block_cname = \"batch\",                           qc_cname = \"group\", qc_val = \"QC\", order_cname = \"Injection_order\",                           missing_thresh = 0.5, rsd_thresh = 0.3, backtransform  = FALSE) }"},{"path":"https://pmartr.github.io/malbacR/reference/bc_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Range Scaling adjusted object — bc_range","title":"Range Scaling adjusted object — bc_range","text":"function returns pmart object undergone Range Scaling normalization","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Range Scaling adjusted object — bc_range","text":"","code":"bc_range(omicsData)"},{"path":"https://pmartr.github.io/malbacR/reference/bc_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Range Scaling adjusted object — bc_range","text":"omicsData object class 'pepData', 'proData', 'metabData', 'lipidData', 'nmrData', usually created .pepData, .proData, .metabData, .lipidData, .nmrData, respectively.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Range Scaling adjusted object — bc_range","text":"Object class omicsData undergone   Range Scaling Normalization batch effect correction","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_range.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Range Scaling adjusted object — bc_range","text":"Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Range Scaling adjusted object — bc_range","text":"","code":"library(malbacR) library(pmartR) data(\"pmart_amide\") pmart_amide <- edata_transform(pmart_amide,\"log2\") pmart_amide <- group_designation(pmart_amide,main_effects = \"group\",batch_id = \"batch\") amide_range <- bc_range(omicsData = pmart_amide)"},{"path":"https://pmartr.github.io/malbacR/reference/bc_ruvRandom.html","id":null,"dir":"Reference","previous_headings":"","what":"RUV-random normalized adjusted object — bc_ruvRandom","title":"RUV-random normalized adjusted object — bc_ruvRandom","text":"function returns pmart object undergone RUV-random normalization regarding batch effect correction","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_ruvRandom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RUV-random normalized adjusted object — bc_ruvRandom","text":"","code":"bc_ruvRandom(omicsData, nc_cname, nc_val, k = 3)"},{"path":"https://pmartr.github.io/malbacR/reference/bc_ruvRandom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RUV-random normalized adjusted object — bc_ruvRandom","text":"omicsData object class 'pepData', 'proData', 'metabData', 'lipidData', 'nmrData', usually created .pepData, .proData, .metabData, .lipidData, .nmrData, respectively. nc_cname character string giving name column omicsData$e_meta contains factor variable indicating whether sample negative control nc_val value giving name/value nc_cname column indicates molecule negative control k number factors unwanted variation, default 3, factor unwanted variation batch effect, recommend setting k number batches data visual inspection option","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_ruvRandom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RUV-random normalized adjusted object — bc_ruvRandom","text":"Object class omicsData undergone   RUV-random normalization","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_ruvRandom.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"RUV-random normalized adjusted object — bc_ruvRandom","text":"Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_ruvRandom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RUV-random normalized adjusted object — bc_ruvRandom","text":"","code":"library(malbacR) library(pmartR) data(\"pmart_mix\") pmart_mix <- edata_transform(pmart_mix,\"log2\") pmart_mix <- group_designation(pmart_mix,main_effects = \"BatchNum\",batch_id = \"BatchNum\") mix_ruv <- bc_ruvRandom(omicsData = pmart_mix, nc_cname = \"tag\",nc_val = \"IS\", k = 3) #> Joining with `by = join_by(Metabolite)`"},{"path":"https://pmartr.github.io/malbacR/reference/bc_serrf.html","id":null,"dir":"Reference","previous_headings":"","what":"SERRF batch correction — bc_serrf","title":"SERRF batch correction — bc_serrf","text":"function returns pmart object undergone SERRF  batch effect correction","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_serrf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SERRF batch correction — bc_serrf","text":"","code":"bc_serrf(omicsData, sampletype_cname, test_val, group_cname)"},{"path":"https://pmartr.github.io/malbacR/reference/bc_serrf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SERRF batch correction — bc_serrf","text":"omicsData object class 'pepData', 'proData', 'metabData', 'lipidData', 'nmrData', usually created .pepData, .proData, .metabData, .lipidData, .nmrData, respectively. sampletype_cname character string giving name column omicsData$f_data contains sample type information (quality control samples) test_val character string giving name value within column sampletype_cname used testing value SERRF group_cname character string giving name column omicsData$f_data contians group information","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_serrf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SERRF batch correction — bc_serrf","text":"Object class omicsData undergone   SERRF normalization","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_serrf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SERRF batch correction — bc_serrf","text":"Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_serrf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SERRF batch correction — bc_serrf","text":"","code":"library(malbacR) library(pmartR) data(\"pmart_amide\") pmart_amide <- edata_transform(pmart_amide,\"log2\") pmart_amide <- group_designation(pmart_amide,main_effects = \"group\",batch_id = \"batch\") impObj <- imputation(omicsData = pmart_amide) amide_imp <- apply_imputation(imputeData = impObj, omicsData = pmart_amide) amide_imp_abund <- edata_transform(amide_imp,\"abundance\") amide_serrf_abundance <- bc_serrf(omicsData = amide_imp_abund,sampletype_cname = \"group\",test_val = \"QC\",group_cname = \"group\") #> Joining with `by = join_by(batch)`"},{"path":"https://pmartr.github.io/malbacR/reference/bc_tiger.html","id":null,"dir":"Reference","previous_headings":"","what":"TIGER batch correction — bc_tiger","title":"TIGER batch correction — bc_tiger","text":"function returns pmart object undergone TIGER  batch effect correction","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_tiger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TIGER batch correction — bc_tiger","text":"","code":"bc_tiger(   omicsData,   sampletype_cname,   test_val,   group_cname,   position_cname = NULL,   injection_cname = NULL )"},{"path":"https://pmartr.github.io/malbacR/reference/bc_tiger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TIGER batch correction — bc_tiger","text":"omicsData object class 'pepData', 'proData', 'metabData', 'lipidData', 'nmrData', usually created .pepData, .proData, .metabData, .lipidData, .nmrData, respectively. sampletype_cname character string giving name column omicsData$f_data contains sample type information (quality control samples) test_val character string giving name value within column sampletype_cname used testing value TIGER group_cname character string giving name column omicsData$f_data contians group information position_cname character string giving name column omicsData$f_data contains well position, default NULL injection_cname character string giving name column omicsData$f_data contains injection order, default NULL","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_tiger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TIGER batch correction — bc_tiger","text":"Object class omicsData undergone   TIGER normalization","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_tiger.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TIGER batch correction — bc_tiger","text":"Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_tiger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TIGER batch correction — bc_tiger","text":"","code":"library(malbacR) library(pmartR) data(\"pmart_amide\") pmart_amide <- group_designation(pmart_amide,main_effects = \"group\",batch_id = \"batch\") tigerFilt <- tiger_filter(pmart_amide,sampletype_cname = \"group\",test_val = \"QC\") pmart_amideFilt <- apply_tigerFilt(tigerFilt,pmart_amide) #> There are no molecules that need to be removed. Returning the original omicsData amide_tiger <- bc_tiger(omicsData = pmart_amideFilt,sampletype_cname = \"group\",                         test_val = \"QC\",injection_cname = \"Injection_order\",group_cname = \"group\") #> + Initialising...   2024-02-13 10:58:22 #> + Computing target values...   2024-02-13 10:58:22 #> + Selecting highly-correlated variables...   2024-02-13 10:58:22 #>   - Computing correlation coefficients... #>   - Selecting variables... #> + Data correction started.   2024-02-13 10:58:22 #>    |                                                                      | 0 % ~calculating     |==                                                                    | 2 % ~05m 08s         |===                                                                   | 4 % ~04m 06s         |====                                                                  | 5 % ~03m 42s         |=====                                                                 | 7 % ~03m 27s         |=======                                                               | 9 % ~03m 18s         |========                                                              | 11% ~03m 10s         |=========                                                             | 12% ~03m 04s         |==========                                                            | 14% ~02m 59s         |============                                                          | 16% ~02m 53s         |=============                                                         | 18% ~02m 49s         |==============                                                        | 20% ~02m 44s         |===============                                                       | 21% ~02m 41s         |=================                                                     | 23% ~02m 37s         |==================                                                    | 25% ~02m 32s         |===================                                                   | 27% ~02m 28s         |====================                                                  | 29% ~02m 24s         |======================                                                | 30% ~02m 20s         |=======================                                               | 32% ~02m 16s         |========================                                              | 34% ~02m 13s         |=========================                                             | 36% ~02m 09s         |===========================                                           | 38% ~02m 05s         |============================                                          | 39% ~02m 01s         |=============================                                         | 41% ~01m 57s         |==============================                                        | 43% ~01m 54s         |================================                                      | 45% ~01m 50s         |=================================                                     | 46% ~01m 46s         |==================================                                    | 48% ~01m 42s         |===================================                                   | 50% ~01m 39s         |=====================================                                 | 52% ~01m 35s         |======================================                                | 54% ~01m 31s         |=======================================                               | 55% ~01m 28s         |========================================                              | 57% ~01m 24s         |==========================================                            | 59% ~01m 20s         |===========================================                           | 61% ~01m 17s         |============================================                          | 62% ~01m 13s         |=============================================                         | 64% ~01m 10s         |===============================================                       | 66% ~01m 06s         |================================================                      | 68% ~01m 03s         |=================================================                     | 70% ~59s             |==================================================                    | 71% ~56s             |====================================================                  | 73% ~52s             |=====================================================                 | 75% ~49s             |======================================================                | 77% ~45s             |=======================================================               | 79% ~42s             |=========================================================             | 80% ~38s             |==========================================================            | 82% ~35s             |===========================================================           | 84% ~31s             |============================================================          | 86% ~28s             |==============================================================        | 88% ~24s             |===============================================================       | 89% ~21s             |================================================================      | 91% ~17s             |=================================================================     | 93% ~14s             |===================================================================   | 95% ~10s             |====================================================================  | 96% ~07s             |===================================================================== | 98% ~03s             |======================================================================| 100% elapsed=03m 12s #>   - Merging results... #> + Completed.   2024-02-13 11:01:37"},{"path":"https://pmartr.github.io/malbacR/reference/bc_waveica.html","id":null,"dir":"Reference","previous_headings":"","what":"WaveICA batch correction — bc_waveica","title":"WaveICA batch correction — bc_waveica","text":"function returns pmart object undergone either WaveICA WaveICA_2.0  batch effect correction","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_waveica.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WaveICA batch correction — bc_waveica","text":"","code":"bc_waveica(   omicsData,   batch_cname = NULL,   injection_cname = NULL,   version = \"WaveICA\",   alpha = 0,   cutoff_injection = 0.1,   K = 20,   cutoff_batch = 0.05,   cutoff_group = 0.05,   negative_to_na = TRUE )"},{"path":"https://pmartr.github.io/malbacR/reference/bc_waveica.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WaveICA batch correction — bc_waveica","text":"omicsData object class 'pepData', 'proData', 'metabData', 'lipidData', 'nmrData', usually created .pepData, .proData, .metabData, .lipidData, .nmrData, respectively. injection_cname character string giving name column omicsData$f_data contains run order samples (used WaveICA2.0) version character string specifies whether user wants run \"WaveICA\" \"WaveICA2.0\" (default \"WaveICA\") alpha tradeoff value independence samples variables ICA, 0 1, defaults 0 cutoff_injection threshold variation explained injection order independent components, 0 1, defaults 0.1 (used WaveICA2.0) K maximal component ICA decomposes, defaults 20 (though recommendation K = 10 using \"WaveICA2.0\") cutoff_batch threshold variation explained batch independent components, 0 1, defaults 0.05 (used WaveICA) cutoff_group threshold variation explained group independent components, 0 1, defaults 0.05 (used WaveICA) negative_to_na logical argument set TRUE (default), raw abundance values  calculated negative value converted NA values, important downstream analyses require log2 transformed data batach_cname character string giving name colum omicsData$f_data contains batch information samples (used WaveICA)","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_waveica.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WaveICA batch correction — bc_waveica","text":"Object class omicsData undergone   WaveICA normalization","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_waveica.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"WaveICA batch correction — bc_waveica","text":"Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/bc_waveica.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"WaveICA batch correction — bc_waveica","text":"","code":"library(malbacR) library(pmartR) data(\"pmart_amide\") pmart_amide <- edata_transform(pmart_amide,\"log2\") pmart_amide <- group_designation(pmart_amide,main_effects = \"group\",batch_id = \"batch\") impObj <- imputation(omicsData = pmart_amide) amide_imp <- apply_imputation(imputeData = impObj, omicsData = pmart_amide) amide_imp_abundance <- edata_transform(amide_imp,\"abundance\") amide_wave <- bc_waveica(omicsData = amide_imp_abundance, injection_cname = \"Injection_order\",                          version = \"WaveICA2.0\",alpha = 0, cutoff_injection = 0.1, K = 10,                          negative_to_na = TRUE) #> ######Decomposition 1 ######## #> ######Decomposition 2 ######## #> ######Decomposition 3 ######## #> ######Decomposition 4 ######## #> ######Decomposition 5 ######## #> ######Decomposition 6 ######## #> ######Decomposition 7 ######## #> ######Decomposition 8 ######## #> ######Decomposition 9 ######## #> ######Decomposition 10 ######## #> ######Decomposition 11 ######## #> ######Decomposition 12 ######## #> ######Decomposition 13 ######## #> ######Decomposition 14 ######## #> ######Decomposition 15 ######## #> ######Decomposition 16 ######## #> ######Decomposition 17 ######## #> ######Decomposition 18 ######## #> ######Decomposition 19 ######## #> ######Decomposition 20 ######## #> ######Decomposition 21 ######## #> ######Decomposition 22 ######## #> ######Decomposition 23 ######## #> ######Decomposition 24 ######## #> ######Decomposition 25 ######## #> ######Decomposition 26 ######## #> ######Decomposition 27 ######## #> ######Decomposition 28 ######## #> ######Decomposition 29 ######## #> ######Decomposition 30 ######## #> ######Decomposition 31 ######## #> ######Decomposition 32 ######## #> ######Decomposition 33 ######## #> ######Decomposition 34 ######## #> ######Decomposition 35 ######## #> ######Decomposition 36 ######## #> ######Decomposition 37 ######## #> ######Decomposition 38 ######## #> ######Decomposition 39 ######## #> ######Decomposition 40 ######## #> ######Decomposition 41 ######## #> ######Decomposition 42 ######## #> ######Decomposition 43 ######## #> ######Decomposition 44 ######## #> ######Decomposition 45 ######## #> ######Decomposition 46 ######## #> ######Decomposition 47 ######## #> ######Decomposition 48 ######## #> ######Decomposition 49 ######## #> ######Decomposition 50 ######## #> ######Decomposition 51 ######## #> ######Decomposition 52 ######## #> ######Decomposition 53 ######## #> ######Decomposition 54 ######## #> ######Decomposition 55 ######## #> ######Decomposition 56 ######## #> ######Decomposition 57 ######## #> ######Decomposition 58 ######## #> ######Decomposition 59 ######## #> ######Decomposition 60 ######## #> ######Decomposition 61 ######## #> ######Decomposition 62 ######## #> ######Decomposition 63 ######## #> ######Decomposition 64 ######## #> ######Decomposition 65 ######## #> ######Decomposition 66 ######## #> ######Decomposition 67 ######## #> ######Decomposition 68 ######## #> ######Decomposition 69 ######## #> ######Decomposition 70 ######## #> ######Decomposition 71 ######## #> ######Decomposition 72 ######## #> ######Decomposition 73 ######## #> ######Decomposition 74 ######## #> ######Decomposition 75 ######## #> ######Decomposition 76 ######## #> ######Decomposition 77 ######## #> ######Decomposition 78 ######## #> ######Decomposition 79 ######## #> ######Decomposition 80 ######## #> ######Decomposition 81 ######## #> ######Decomposition 82 ######## #> ######Decomposition 83 ######## #> ######Decomposition 84 ######## #> ######Decomposition 85 ######## #> ######Decomposition 86 ######## #> ######Decomposition 87 ######## #> ######Decomposition 88 ######## #> ######Decomposition 89 ######## #> ######Decomposition 90 ######## #> ######Decomposition 91 ######## #> ######Decomposition 92 ######## #> ######Decomposition 93 ######## #> ######Decomposition 94 ######## #> ######Decomposition 95 ######## #> ######Decomposition 96 ######## #> ######Decomposition 97 ######## #> ######Decomposition 98 ######## #> ######Decomposition 99 ######## #> ######Decomposition 100 ######## #> ######Decomposition 101 ######## #> ######Decomposition 102 ######## #> ######Decomposition 103 ######## #> ######Decomposition 104 ######## #> ######Decomposition 105 ######## #> ######Decomposition 106 ######## #> ######Decomposition 107 ######## #> ######Decomposition 108 ######## #> ######Decomposition 109 ######## #> ######Decomposition 110 ######## #> ######Decomposition 111 ######## #> ######Decomposition 112 ######## #> ######Decomposition 113 ######## #> ######Decomposition 114 ######## #> ######Decomposition 115 ######## #> ######Decomposition 116 ######## #> ######Decomposition 117 ######## #> ######Decomposition 118 ######## #> ######Decomposition 119 ######## #> ######Decomposition 120 ######## #> ######Decomposition 121 ######## #> ######Decomposition 122 ######## #> ######Decomposition 123 ######## #> ######Decomposition 124 ######## #> ######Decomposition 125 ######## #> ######Decomposition 126 ######## #> ######Decomposition 127 ######## #> ######Decomposition 128 ######## #> ######Decomposition 129 ######## #> ######Decomposition 130 ######## #> ######Decomposition 131 ######## #> ######Decomposition 132 ######## #> ######Decomposition 133 ######## #> ######Decomposition 134 ######## #> ######Decomposition 135 ######## #> ######Decomposition 136 ######## #> ######Decomposition 137 ######## #> ######Decomposition 138 ######## #> ######Decomposition 139 ######## #> ######Decomposition 140 ######## #> ######Decomposition 141 ######## #> ######Decomposition 142 ######## #> ######Decomposition 143 ######## #> ######Decomposition 144 ######## #> ######Decomposition 145 ######## #> ######Decomposition 146 ######## #> ######Decomposition 147 ######## #> ######Decomposition 148 ######## #> ######Decomposition 149 ######## #> ######Decomposition 150 ######## #> ######Decomposition 151 ######## #> ######Decomposition 152 ######## #> ######Decomposition 153 ######## #> ######Decomposition 154 ######## #> ######Decomposition 155 ######## #> ######Decomposition 156 ######## #> ######Decomposition 157 ######## #> ######Decomposition 158 ######## #> ######Decomposition 159 ######## #> ######Decomposition 160 ######## #> ######Decomposition 161 ######## #> ######Decomposition 162 ######## #> ######Decomposition 163 ######## #> ######Decomposition 164 ######## #> ######Decomposition 165 ######## #> ######Decomposition 166 ######## #> ######Decomposition 167 ######## #> ######Decomposition 168 ######## #> ######Decomposition 169 ######## #> ######Decomposition 170 ######## #> ######Decomposition 171 ######## #> ######Decomposition 172 ######## #> ######Decomposition 173 ######## #> ######Decomposition 174 ######## #> ######Decomposition 175 ######## #> ######Decomposition 176 ######## #> ######Decomposition 177 ######## #> ######Decomposition 178 ######## #> ######Decomposition 179 ######## #> ######Decomposition 180 ######## #> ######Decomposition 181 ######## #> ######Decomposition 182 ######## #> ######Decomposition 183 ######## #> ######Decomposition 184 ######## #> ######Decomposition 185 ######## #> ######Decomposition 186 ######## #> ######Decomposition 187 ######## #> ######Decomposition 188 ######## #> ######Decomposition 189 ######## #> ######Decomposition 190 ######## #> ######Decomposition 191 ######## #> ######Decomposition 192 ######## #> ######Decomposition 193 ######## #> ######Decomposition 194 ######## #> ######Decomposition 195 ######## #> ######Decomposition 196 ######## #> ######Decomposition 197 ######## #> ######Decomposition 198 ######## #> ######Decomposition 199 ######## #> ######Decomposition 200 ######## #> ######Decomposition 201 ######## #> ######Decomposition 202 ######## #> ######Decomposition 203 ######## #> ######Decomposition 204 ######## #> ######Decomposition 205 ######## #> ######Decomposition 206 ######## #> ######Decomposition 207 ######## #> ######Decomposition 208 ######## #> ######Decomposition 209 ######## #> ######Decomposition 210 ######## #> ######Decomposition 211 ######## #> ######Decomposition 212 ######## #> ######Decomposition 213 ######## #> ######Decomposition 214 ######## #> ######Decomposition 215 ######## #> ######Decomposition 216 ######## #> ######Decomposition 217 ######## #> ######Decomposition 218 ######## #> ######Decomposition 219 ######## #> ######Decomposition 220 ######## #> ######Decomposition 221 ######## #> ######Decomposition 222 ######## #> ######Decomposition 223 ######## #> ######Decomposition 224 ######## #> ######Decomposition 225 ######## #> ######Decomposition 226 ######## #> ######Decomposition 227 ######## #> ######Decomposition 228 ######## #> ######Decomposition 229 ######## #> ######Decomposition 230 ######## #> ######Decomposition 231 ######## #> ######Decomposition 232 ######## #> ######Decomposition 233 ######## #> ######Decomposition 234 ######## #> ######Decomposition 235 ######## #> ######Decomposition 236 ######## #> ######Decomposition 237 ######## #> ######Decomposition 238 ######## #> ######Decomposition 239 ######## #> ######Decomposition 240 ######## #> ######Decomposition 241 ######## #> ######Decomposition 242 ######## #> ######Decomposition 243 ######## #> ######Decomposition 244 ######## #> ######Decomposition 245 ######## #> ######Decomposition 246 ######## #> ######Decomposition 247 ######## #> ######Decomposition 248 ######## #> ######Decomposition 249 ######## #> ######Decomposition 250 ######## #> ######Decomposition 251 ######## #> ######Decomposition 252 ######## #> ######Decomposition 253 ######## #> ######Decomposition 254 ######## #> ######Decomposition 255 ######## #> ######Decomposition 256 ######## #> ######Decomposition 257 ######## #> ######Decomposition 258 ######## #> ######Decomposition 259 ######## #> ######Decomposition 260 ######## #> ######Decomposition 261 ######## #> ######Decomposition 262 ######## #> ######Decomposition 263 ######## #> ######Decomposition 264 ######## #> ######Decomposition 265 ######## #> ######Decomposition 266 ######## #> ######Decomposition 267 ######## #> ######Decomposition 268 ######## #> ######Decomposition 269 ######## #> ######Decomposition 270 ######## #> ######Decomposition 271 ######## #> ######Decomposition 272 ######## #> ######Decomposition 273 ######## #> ######Decomposition 274 ######## #> ######Decomposition 275 ######## #> ######Decomposition 276 ######## #> ######Decomposition 277 ######## #> ######Decomposition 278 ######## #> ######Decomposition 279 ######## #> ######Decomposition 280 ######## #> ######Decomposition 281 ######## #> ######Decomposition 282 ######## #> ######Decomposition 283 ######## #> ######Decomposition 284 ######## #> ######Decomposition 285 ######## #> ######Decomposition 286 ######## #> ######Decomposition 287 ######## #> ######Decomposition 288 ######## #> ######Decomposition 289 ######## #> ######Decomposition 290 ######## #> ######Decomposition 291 ######## #> ######Decomposition 292 ######## #> ######Decomposition 293 ######## #> ######Decomposition 294 ######## #> ######Decomposition 295 ######## #> ######Decomposition 296 ######## #> ######Decomposition 297 ######## #> ######Decomposition 298 ######## #> ######Decomposition 299 ######## #> ######Decomposition 300 ######## #> ######Decomposition 301 ######## #> ######Decomposition 302 ######## #> ######Decomposition 303 ######## #> ######Decomposition 304 ######## #> ######Decomposition 305 ######## #> ######Decomposition 306 ######## #> ######Decomposition 307 ######## #> ######Decomposition 308 ######## #> ######Decomposition 309 ######## #> ######Decomposition 310 ######## #> ######Decomposition 311 ######## #> ######Decomposition 312 ######## #> ######Decomposition 313 ######## #> ######Decomposition 314 ######## #> ######Decomposition 315 ######## #> ######Decomposition 316 ######## #> ######Decomposition 317 ######## #> ######Decomposition 318 ######## #> ######Decomposition 319 ######## #> ######Decomposition 320 ######## #> ######Decomposition 321 ######## #> ######Decomposition 322 ######## #> ######Decomposition 323 ######## #> ######Decomposition 324 ######## #> ######Decomposition 325 ######## #> ######Decomposition 326 ######## #> ######Decomposition 327 ######## #> ######Decomposition 328 ######## #> ######Decomposition 329 ######## #> ######Decomposition 330 ######## #> ######Decomposition 331 ######## #> ######Decomposition 332 ######## #> ######Decomposition 333 ######## #> ######Decomposition 334 ######## #> ######Decomposition 335 ######## #> ######Decomposition 336 ######## #> ######Decomposition 337 ######## #> ######Decomposition 338 ######## #> ######Decomposition 339 ######## #> ######Decomposition 340 ######## #> ######Decomposition 341 ######## #> ######Decomposition 342 ######## #> ######Decomposition 343 ######## #> ######Decomposition 344 ######## #> ######Decomposition 345 ######## #> ######Decomposition 346 ######## #> ######Decomposition 347 ######## #> ######Decomposition 348 ######## #> ######Decomposition 349 ######## #> ######Decomposition 350 ######## #> ######Decomposition 351 ######## #> ######Decomposition 352 ######## #> ######Decomposition 353 ######## #> ######Decomposition 354 ######## #> ######Decomposition 355 ######## #> ######Decomposition 356 ######## #> ######Decomposition 357 ######## #> ######Decomposition 358 ######## #> ######Decomposition 359 ######## #> ######Decomposition 360 ######## #> ######Decomposition 361 ######## #> ######Decomposition 362 ######## #> ######Decomposition 363 ######## #> ######Decomposition 364 ######## #> ######Decomposition 365 ######## #> ######Decomposition 366 ######## #> ######Decomposition 367 ######## #> ######Decomposition 368 ######## #> ######Decomposition 369 ######## #> ######Decomposition 370 ######## #> ######Decomposition 371 ######## #> ######Decomposition 372 ######## #> ######Decomposition 373 ######## #> ######Decomposition 374 ######## #> ######Decomposition 375 ######## #> ######Decomposition 376 ######## #> ######Decomposition 377 ######## #> ######Decomposition 378 ######## #> ######Decomposition 379 ######## #> ######Decomposition 380 ######## #> ######Decomposition 381 ######## #> ######Decomposition 382 ######## #> ######Decomposition 383 ######## #> ######Decomposition 384 ######## #> ######Decomposition 385 ######## #> ######Decomposition 386 ######## #> ######Decomposition 387 ######## #> ######Decomposition 388 ######## #> ######Decomposition 389 ######## #> ######Decomposition 390 ######## #> ######Decomposition 391 ######## #> ######Decomposition 392 ######## #> ######Decomposition 393 ######## #> ######Decomposition 394 ######## #> ######Decomposition 395 ######## #> ######Decomposition 396 ######## #> ######Decomposition 397 ######## #> ######Decomposition 398 ######## #> ######Decomposition 399 ######## #> ######Decomposition 400 ######## #> ######Decomposition 401 ######## #> ######Decomposition 402 ######## #> ######Decomposition 403 ######## #> ######Decomposition 404 ######## #> ######Decomposition 405 ######## #> ######Decomposition 406 ######## #> ######Decomposition 407 ######## #> ######Decomposition 408 ######## #> ######Decomposition 409 ######## #> ######Decomposition 410 ######## #> ######Decomposition 411 ######## #> ######Decomposition 412 ######## #> ######Decomposition 413 ######## #> ######Decomposition 414 ######## #> ######Decomposition 415 ######## #> ######Decomposition 416 ######## #> ######Decomposition 417 ######## #> ######Decomposition 418 ######## #> ######Decomposition 419 ######## #> ######Decomposition 420 ######## #> ######Decomposition 421 ######## #> ######Decomposition 422 ######## #> ######Decomposition 423 ######## #> ######Decomposition 424 ######## #> ######Decomposition 425 ######## #> ######Decomposition 426 ######## #> ######Decomposition 427 ######## #> ######Decomposition 428 ######## #> ######Decomposition 429 ######## #> ######Decomposition 430 ######## #> ######Decomposition 431 ######## #> ######Decomposition 432 ######## #> ######Decomposition 433 ######## #> ######Decomposition 434 ######## #> ######Decomposition 435 ######## #> ######Decomposition 436 ######## #> ######Decomposition 437 ######## #> ######Decomposition 438 ######## #> ######Decomposition 439 ######## #> ######Decomposition 440 ######## #> ######Decomposition 441 ######## #> ######Decomposition 442 ######## #> ######Decomposition 443 ######## #> ######Decomposition 444 ######## #> ######Decomposition 445 ######## #> ######Decomposition 446 ######## #> ######Decomposition 447 ######## #> ######Decomposition 448 ######## #> ######Decomposition 449 ######## #> ######Decomposition 450 ######## #> ######Decomposition 451 ######## #> ######Decomposition 452 ######## #> ######Decomposition 453 ######## #> ######Decomposition 454 ######## #> ######Decomposition 455 ######## #> ######Decomposition 456 ######## #> ######Decomposition 457 ######## #> ######Decomposition 458 ######## #> ######Decomposition 459 ######## #> ######Decomposition 460 ######## #> ######Decomposition 461 ######## #> ######Decomposition 462 ######## #> ######Decomposition 463 ######## #> ######Decomposition 464 ######## #> ######Decomposition 465 ######## #> ######Decomposition 466 ######## #> ######Decomposition 467 ######## #> ######Decomposition 468 ######## #> ######Decomposition 469 ######## #> ######Decomposition 470 ######## #> ######Decomposition 471 ######## #> ######Decomposition 472 ######## #> ######Decomposition 473 ######## #> ######Decomposition 474 ######## #> ######Decomposition 475 ######## #> ######Decomposition 476 ######## #> ######Decomposition 477 ######## #> ######Decomposition 478 ######## #> ######Decomposition 479 ######## #> ######Decomposition 480 ######## #> ######Decomposition 481 ######## #> ######Decomposition 482 ######## #> ######Decomposition 483 ######## #> ######Decomposition 484 ######## #> ######Decomposition 485 ######## #> ######Decomposition 486 ######## #> ######Decomposition 487 ######## #> ######Decomposition 488 ######## #> ######Decomposition 489 ######## #> ######Decomposition 490 ######## #> ######Decomposition 491 ######## #> ######Decomposition 492 ######## #> ######Decomposition 493 ######## #> ######Decomposition 494 ######## #> ######Decomposition 495 ######## #> ######Decomposition 496 ######## #> ######Decomposition 497 ######## #> ######Decomposition 498 ######## #> ######Decomposition 499 ######## #> ######Decomposition 500 ######## #> ######### ICA 1 ############# #> ######### ICA 2 ############# #> ######### ICA 3 ############# #> ######### ICA 4 ############# #> ######### ICA 5 ############# #> ######### ICA 6 ############# #> ######### ICA 7 ############# #> ######### ICA 8 ############# #> ######### ICA 9 ############# #> ######### ICA 10 ############# #> ######Reconstruction 1 ######## #> ######Reconstruction 2 ######## #> ######Reconstruction 3 ######## #> ######Reconstruction 4 ######## #> ######Reconstruction 5 ######## #> ######Reconstruction 6 ######## #> ######Reconstruction 7 ######## #> ######Reconstruction 8 ######## #> ######Reconstruction 9 ######## #> ######Reconstruction 10 ######## #> ######Reconstruction 11 ######## #> ######Reconstruction 12 ######## #> ######Reconstruction 13 ######## #> ######Reconstruction 14 ######## #> ######Reconstruction 15 ######## #> ######Reconstruction 16 ######## #> ######Reconstruction 17 ######## #> ######Reconstruction 18 ######## #> ######Reconstruction 19 ######## #> ######Reconstruction 20 ######## #> ######Reconstruction 21 ######## #> ######Reconstruction 22 ######## #> ######Reconstruction 23 ######## #> ######Reconstruction 24 ######## #> ######Reconstruction 25 ######## #> ######Reconstruction 26 ######## #> ######Reconstruction 27 ######## #> ######Reconstruction 28 ######## #> ######Reconstruction 29 ######## #> ######Reconstruction 30 ######## #> ######Reconstruction 31 ######## #> ######Reconstruction 32 ######## #> ######Reconstruction 33 ######## #> ######Reconstruction 34 ######## #> ######Reconstruction 35 ######## #> ######Reconstruction 36 ######## #> ######Reconstruction 37 ######## #> ######Reconstruction 38 ######## #> ######Reconstruction 39 ######## #> ######Reconstruction 40 ######## #> ######Reconstruction 41 ######## #> ######Reconstruction 42 ######## #> ######Reconstruction 43 ######## #> ######Reconstruction 44 ######## #> ######Reconstruction 45 ######## #> ######Reconstruction 46 ######## #> ######Reconstruction 47 ######## #> ######Reconstruction 48 ######## #> ######Reconstruction 49 ######## #> ######Reconstruction 50 ######## #> ######Reconstruction 51 ######## #> ######Reconstruction 52 ######## #> ######Reconstruction 53 ######## #> ######Reconstruction 54 ######## #> ######Reconstruction 55 ######## #> ######Reconstruction 56 ######## #> ######Reconstruction 57 ######## #> ######Reconstruction 58 ######## #> ######Reconstruction 59 ######## #> ######Reconstruction 60 ######## #> ######Reconstruction 61 ######## #> ######Reconstruction 62 ######## #> ######Reconstruction 63 ######## #> ######Reconstruction 64 ######## #> ######Reconstruction 65 ######## #> ######Reconstruction 66 ######## #> ######Reconstruction 67 ######## #> ######Reconstruction 68 ######## #> ######Reconstruction 69 ######## #> ######Reconstruction 70 ######## #> ######Reconstruction 71 ######## #> ######Reconstruction 72 ######## #> ######Reconstruction 73 ######## #> ######Reconstruction 74 ######## #> ######Reconstruction 75 ######## #> ######Reconstruction 76 ######## #> ######Reconstruction 77 ######## #> ######Reconstruction 78 ######## #> ######Reconstruction 79 ######## #> ######Reconstruction 80 ######## #> ######Reconstruction 81 ######## #> ######Reconstruction 82 ######## #> ######Reconstruction 83 ######## #> ######Reconstruction 84 ######## #> ######Reconstruction 85 ######## #> ######Reconstruction 86 ######## #> ######Reconstruction 87 ######## #> ######Reconstruction 88 ######## #> ######Reconstruction 89 ######## #> ######Reconstruction 90 ######## #> ######Reconstruction 91 ######## #> ######Reconstruction 92 ######## #> ######Reconstruction 93 ######## #> ######Reconstruction 94 ######## #> ######Reconstruction 95 ######## #> ######Reconstruction 96 ######## #> ######Reconstruction 97 ######## #> ######Reconstruction 98 ######## #> ######Reconstruction 99 ######## #> ######Reconstruction 100 ######## #> ######Reconstruction 101 ######## #> ######Reconstruction 102 ######## #> ######Reconstruction 103 ######## #> ######Reconstruction 104 ######## #> ######Reconstruction 105 ######## #> ######Reconstruction 106 ######## #> ######Reconstruction 107 ######## #> ######Reconstruction 108 ######## #> ######Reconstruction 109 ######## #> ######Reconstruction 110 ######## #> ######Reconstruction 111 ######## #> ######Reconstruction 112 ######## #> ######Reconstruction 113 ######## #> ######Reconstruction 114 ######## #> ######Reconstruction 115 ######## #> ######Reconstruction 116 ######## #> ######Reconstruction 117 ######## #> ######Reconstruction 118 ######## #> ######Reconstruction 119 ######## #> ######Reconstruction 120 ######## #> ######Reconstruction 121 ######## #> ######Reconstruction 122 ######## #> ######Reconstruction 123 ######## #> ######Reconstruction 124 ######## #> ######Reconstruction 125 ######## #> ######Reconstruction 126 ######## #> ######Reconstruction 127 ######## #> ######Reconstruction 128 ######## #> ######Reconstruction 129 ######## #> ######Reconstruction 130 ######## #> ######Reconstruction 131 ######## #> ######Reconstruction 132 ######## #> ######Reconstruction 133 ######## #> ######Reconstruction 134 ######## #> ######Reconstruction 135 ######## #> ######Reconstruction 136 ######## #> ######Reconstruction 137 ######## #> ######Reconstruction 138 ######## #> ######Reconstruction 139 ######## #> ######Reconstruction 140 ######## #> ######Reconstruction 141 ######## #> ######Reconstruction 142 ######## #> ######Reconstruction 143 ######## #> ######Reconstruction 144 ######## #> ######Reconstruction 145 ######## #> ######Reconstruction 146 ######## #> ######Reconstruction 147 ######## #> ######Reconstruction 148 ######## #> ######Reconstruction 149 ######## #> ######Reconstruction 150 ######## #> ######Reconstruction 151 ######## #> ######Reconstruction 152 ######## #> ######Reconstruction 153 ######## #> ######Reconstruction 154 ######## #> ######Reconstruction 155 ######## #> ######Reconstruction 156 ######## #> ######Reconstruction 157 ######## #> ######Reconstruction 158 ######## #> ######Reconstruction 159 ######## #> ######Reconstruction 160 ######## #> ######Reconstruction 161 ######## #> ######Reconstruction 162 ######## #> ######Reconstruction 163 ######## #> ######Reconstruction 164 ######## #> ######Reconstruction 165 ######## #> ######Reconstruction 166 ######## #> ######Reconstruction 167 ######## #> ######Reconstruction 168 ######## #> ######Reconstruction 169 ######## #> ######Reconstruction 170 ######## #> ######Reconstruction 171 ######## #> ######Reconstruction 172 ######## #> ######Reconstruction 173 ######## #> ######Reconstruction 174 ######## #> ######Reconstruction 175 ######## #> ######Reconstruction 176 ######## #> ######Reconstruction 177 ######## #> ######Reconstruction 178 ######## #> ######Reconstruction 179 ######## #> ######Reconstruction 180 ######## #> ######Reconstruction 181 ######## #> ######Reconstruction 182 ######## #> ######Reconstruction 183 ######## #> ######Reconstruction 184 ######## #> ######Reconstruction 185 ######## #> ######Reconstruction 186 ######## #> ######Reconstruction 187 ######## #> ######Reconstruction 188 ######## #> ######Reconstruction 189 ######## #> ######Reconstruction 190 ######## #> ######Reconstruction 191 ######## #> ######Reconstruction 192 ######## #> ######Reconstruction 193 ######## #> ######Reconstruction 194 ######## #> ######Reconstruction 195 ######## #> ######Reconstruction 196 ######## #> ######Reconstruction 197 ######## #> ######Reconstruction 198 ######## #> ######Reconstruction 199 ######## #> ######Reconstruction 200 ######## #> ######Reconstruction 201 ######## #> ######Reconstruction 202 ######## #> ######Reconstruction 203 ######## #> ######Reconstruction 204 ######## #> ######Reconstruction 205 ######## #> ######Reconstruction 206 ######## #> ######Reconstruction 207 ######## #> ######Reconstruction 208 ######## #> ######Reconstruction 209 ######## #> ######Reconstruction 210 ######## #> ######Reconstruction 211 ######## #> ######Reconstruction 212 ######## #> ######Reconstruction 213 ######## #> ######Reconstruction 214 ######## #> ######Reconstruction 215 ######## #> ######Reconstruction 216 ######## #> ######Reconstruction 217 ######## #> ######Reconstruction 218 ######## #> ######Reconstruction 219 ######## #> ######Reconstruction 220 ######## #> ######Reconstruction 221 ######## #> ######Reconstruction 222 ######## #> ######Reconstruction 223 ######## #> ######Reconstruction 224 ######## #> ######Reconstruction 225 ######## #> ######Reconstruction 226 ######## #> ######Reconstruction 227 ######## #> ######Reconstruction 228 ######## #> ######Reconstruction 229 ######## #> ######Reconstruction 230 ######## #> ######Reconstruction 231 ######## #> ######Reconstruction 232 ######## #> ######Reconstruction 233 ######## #> ######Reconstruction 234 ######## #> ######Reconstruction 235 ######## #> ######Reconstruction 236 ######## #> ######Reconstruction 237 ######## #> ######Reconstruction 238 ######## #> ######Reconstruction 239 ######## #> ######Reconstruction 240 ######## #> ######Reconstruction 241 ######## #> ######Reconstruction 242 ######## #> ######Reconstruction 243 ######## #> ######Reconstruction 244 ######## #> ######Reconstruction 245 ######## #> ######Reconstruction 246 ######## #> ######Reconstruction 247 ######## #> ######Reconstruction 248 ######## #> ######Reconstruction 249 ######## #> ######Reconstruction 250 ######## #> ######Reconstruction 251 ######## #> ######Reconstruction 252 ######## #> ######Reconstruction 253 ######## #> ######Reconstruction 254 ######## #> ######Reconstruction 255 ######## #> ######Reconstruction 256 ######## #> ######Reconstruction 257 ######## #> ######Reconstruction 258 ######## #> ######Reconstruction 259 ######## #> ######Reconstruction 260 ######## #> ######Reconstruction 261 ######## #> ######Reconstruction 262 ######## #> ######Reconstruction 263 ######## #> ######Reconstruction 264 ######## #> ######Reconstruction 265 ######## #> ######Reconstruction 266 ######## #> ######Reconstruction 267 ######## #> ######Reconstruction 268 ######## #> ######Reconstruction 269 ######## #> ######Reconstruction 270 ######## #> ######Reconstruction 271 ######## #> ######Reconstruction 272 ######## #> ######Reconstruction 273 ######## #> ######Reconstruction 274 ######## #> ######Reconstruction 275 ######## #> ######Reconstruction 276 ######## #> ######Reconstruction 277 ######## #> ######Reconstruction 278 ######## #> ######Reconstruction 279 ######## #> ######Reconstruction 280 ######## #> ######Reconstruction 281 ######## #> ######Reconstruction 282 ######## #> ######Reconstruction 283 ######## #> ######Reconstruction 284 ######## #> ######Reconstruction 285 ######## #> ######Reconstruction 286 ######## #> ######Reconstruction 287 ######## #> ######Reconstruction 288 ######## #> ######Reconstruction 289 ######## #> ######Reconstruction 290 ######## #> ######Reconstruction 291 ######## #> ######Reconstruction 292 ######## #> ######Reconstruction 293 ######## #> ######Reconstruction 294 ######## #> ######Reconstruction 295 ######## #> ######Reconstruction 296 ######## #> ######Reconstruction 297 ######## #> ######Reconstruction 298 ######## #> ######Reconstruction 299 ######## #> ######Reconstruction 300 ######## #> ######Reconstruction 301 ######## #> ######Reconstruction 302 ######## #> ######Reconstruction 303 ######## #> ######Reconstruction 304 ######## #> ######Reconstruction 305 ######## #> ######Reconstruction 306 ######## #> ######Reconstruction 307 ######## #> ######Reconstruction 308 ######## #> ######Reconstruction 309 ######## #> ######Reconstruction 310 ######## #> ######Reconstruction 311 ######## #> ######Reconstruction 312 ######## #> ######Reconstruction 313 ######## #> ######Reconstruction 314 ######## #> ######Reconstruction 315 ######## #> ######Reconstruction 316 ######## #> ######Reconstruction 317 ######## #> ######Reconstruction 318 ######## #> ######Reconstruction 319 ######## #> ######Reconstruction 320 ######## #> ######Reconstruction 321 ######## #> ######Reconstruction 322 ######## #> ######Reconstruction 323 ######## #> ######Reconstruction 324 ######## #> ######Reconstruction 325 ######## #> ######Reconstruction 326 ######## #> ######Reconstruction 327 ######## #> ######Reconstruction 328 ######## #> ######Reconstruction 329 ######## #> ######Reconstruction 330 ######## #> ######Reconstruction 331 ######## #> ######Reconstruction 332 ######## #> ######Reconstruction 333 ######## #> ######Reconstruction 334 ######## #> ######Reconstruction 335 ######## #> ######Reconstruction 336 ######## #> ######Reconstruction 337 ######## #> ######Reconstruction 338 ######## #> ######Reconstruction 339 ######## #> ######Reconstruction 340 ######## #> ######Reconstruction 341 ######## #> ######Reconstruction 342 ######## #> ######Reconstruction 343 ######## #> ######Reconstruction 344 ######## #> ######Reconstruction 345 ######## #> ######Reconstruction 346 ######## #> ######Reconstruction 347 ######## #> ######Reconstruction 348 ######## #> ######Reconstruction 349 ######## #> ######Reconstruction 350 ######## #> ######Reconstruction 351 ######## #> ######Reconstruction 352 ######## #> ######Reconstruction 353 ######## #> ######Reconstruction 354 ######## #> ######Reconstruction 355 ######## #> ######Reconstruction 356 ######## #> ######Reconstruction 357 ######## #> ######Reconstruction 358 ######## #> ######Reconstruction 359 ######## #> ######Reconstruction 360 ######## #> ######Reconstruction 361 ######## #> ######Reconstruction 362 ######## #> ######Reconstruction 363 ######## #> ######Reconstruction 364 ######## #> ######Reconstruction 365 ######## #> ######Reconstruction 366 ######## #> ######Reconstruction 367 ######## #> ######Reconstruction 368 ######## #> ######Reconstruction 369 ######## #> ######Reconstruction 370 ######## #> ######Reconstruction 371 ######## #> ######Reconstruction 372 ######## #> ######Reconstruction 373 ######## #> ######Reconstruction 374 ######## #> ######Reconstruction 375 ######## #> ######Reconstruction 376 ######## #> ######Reconstruction 377 ######## #> ######Reconstruction 378 ######## #> ######Reconstruction 379 ######## #> ######Reconstruction 380 ######## #> ######Reconstruction 381 ######## #> ######Reconstruction 382 ######## #> ######Reconstruction 383 ######## #> ######Reconstruction 384 ######## #> ######Reconstruction 385 ######## #> ######Reconstruction 386 ######## #> ######Reconstruction 387 ######## #> ######Reconstruction 388 ######## #> ######Reconstruction 389 ######## #> ######Reconstruction 390 ######## #> ######Reconstruction 391 ######## #> ######Reconstruction 392 ######## #> ######Reconstruction 393 ######## #> ######Reconstruction 394 ######## #> ######Reconstruction 395 ######## #> ######Reconstruction 396 ######## #> ######Reconstruction 397 ######## #> ######Reconstruction 398 ######## #> ######Reconstruction 399 ######## #> ######Reconstruction 400 ######## #> ######Reconstruction 401 ######## #> ######Reconstruction 402 ######## #> ######Reconstruction 403 ######## #> ######Reconstruction 404 ######## #> ######Reconstruction 405 ######## #> ######Reconstruction 406 ######## #> ######Reconstruction 407 ######## #> ######Reconstruction 408 ######## #> ######Reconstruction 409 ######## #> ######Reconstruction 410 ######## #> ######Reconstruction 411 ######## #> ######Reconstruction 412 ######## #> ######Reconstruction 413 ######## #> ######Reconstruction 414 ######## #> ######Reconstruction 415 ######## #> ######Reconstruction 416 ######## #> ######Reconstruction 417 ######## #> ######Reconstruction 418 ######## #> ######Reconstruction 419 ######## #> ######Reconstruction 420 ######## #> ######Reconstruction 421 ######## #> ######Reconstruction 422 ######## #> ######Reconstruction 423 ######## #> ######Reconstruction 424 ######## #> ######Reconstruction 425 ######## #> ######Reconstruction 426 ######## #> ######Reconstruction 427 ######## #> ######Reconstruction 428 ######## #> ######Reconstruction 429 ######## #> ######Reconstruction 430 ######## #> ######Reconstruction 431 ######## #> ######Reconstruction 432 ######## #> ######Reconstruction 433 ######## #> ######Reconstruction 434 ######## #> ######Reconstruction 435 ######## #> ######Reconstruction 436 ######## #> ######Reconstruction 437 ######## #> ######Reconstruction 438 ######## #> ######Reconstruction 439 ######## #> ######Reconstruction 440 ######## #> ######Reconstruction 441 ######## #> ######Reconstruction 442 ######## #> ######Reconstruction 443 ######## #> ######Reconstruction 444 ######## #> ######Reconstruction 445 ######## #> ######Reconstruction 446 ######## #> ######Reconstruction 447 ######## #> ######Reconstruction 448 ######## #> ######Reconstruction 449 ######## #> ######Reconstruction 450 ######## #> ######Reconstruction 451 ######## #> ######Reconstruction 452 ######## #> ######Reconstruction 453 ######## #> ######Reconstruction 454 ######## #> ######Reconstruction 455 ######## #> ######Reconstruction 456 ######## #> ######Reconstruction 457 ######## #> ######Reconstruction 458 ######## #> ######Reconstruction 459 ######## #> ######Reconstruction 460 ######## #> ######Reconstruction 461 ######## #> ######Reconstruction 462 ######## #> ######Reconstruction 463 ######## #> ######Reconstruction 464 ######## #> ######Reconstruction 465 ######## #> ######Reconstruction 466 ######## #> ######Reconstruction 467 ######## #> ######Reconstruction 468 ######## #> ######Reconstruction 469 ######## #> ######Reconstruction 470 ######## #> ######Reconstruction 471 ######## #> ######Reconstruction 472 ######## #> ######Reconstruction 473 ######## #> ######Reconstruction 474 ######## #> ######Reconstruction 475 ######## #> ######Reconstruction 476 ######## #> ######Reconstruction 477 ######## #> ######Reconstruction 478 ######## #> ######Reconstruction 479 ######## #> ######Reconstruction 480 ######## #> ######Reconstruction 481 ######## #> ######Reconstruction 482 ######## #> ######Reconstruction 483 ######## #> ######Reconstruction 484 ######## #> ######Reconstruction 485 ######## #> ######Reconstruction 486 ######## #> ######Reconstruction 487 ######## #> ######Reconstruction 488 ######## #> ######Reconstruction 489 ######## #> ######Reconstruction 490 ######## #> ######Reconstruction 491 ######## #> ######Reconstruction 492 ######## #> ######Reconstruction 493 ######## #> ######Reconstruction 494 ######## #> ######Reconstruction 495 ######## #> ######Reconstruction 496 ######## #> ######Reconstruction 497 ######## #> ######Reconstruction 498 ######## #> ######Reconstruction 499 ######## #> ######Reconstruction 500 ########"},{"path":"https://pmartr.github.io/malbacR/reference/compute_RSD.html","id":null,"dir":"Reference","previous_headings":"","what":"compute_RSD — compute_RSD","title":"compute_RSD — compute_RSD","text":"function computes relative standard deviation (RSD)","code":""},{"path":"https://pmartr.github.io/malbacR/reference/compute_RSD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute_RSD — compute_RSD","text":"","code":"compute_RSD(input_data)"},{"path":"https://pmartr.github.io/malbacR/reference/compute_RSD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute_RSD — compute_RSD","text":"return RSD","code":""},{"path":"https://pmartr.github.io/malbacR/reference/compute_targetVal.html","id":null,"dir":"Reference","previous_headings":"","what":"compute_targetVal — compute_targetVal","title":"compute_targetVal — compute_targetVal","text":"function computes target values ensemble learning architecture","code":""},{"path":"https://pmartr.github.io/malbacR/reference/compute_targetVal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute_targetVal — compute_targetVal","text":"","code":"compute_targetVal(   QC_num,   sampleType,   batchID = NULL,   targetVal_method = c(\"mean\", \"median\"),   targetVal_batchWise = FALSE,   targetVal_removeOutlier = !targetVal_batchWise,   coerce_numeric = FALSE )"},{"path":"https://pmartr.github.io/malbacR/reference/compute_targetVal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute_targetVal — compute_targetVal","text":"QC_num numeric data.frame including metabolite values quality control (QC) samples. Missing values infinite values taken account. Row: sample. Column: metabolite variable. See Examples. sampleType vector corresponding QC_num specify type QC sample. QC samples type type name. See Examples. batchID vector corresponding QC_num specify batch sample. Ignored targetVal_batchWise = FALSE. See Examples. targetVal_method character string specifying target values computed. Can \"mean\" (default) \"median\". See Details. targetVal_batchWise logical. TRUE, target values computed based batch, otherwise, based whole dataset. Setting TRUE might useful dataset obvious batch effects, may also make algorithm less robust. See Details. Default: FALSE. targetVal_removeOutlier logical. TRUE, outliers removed computation. Outliers determined 1.5 * IQR (interquartile range) rule. recommend turning target values computed based batches. See Details. Default: !targetVal_batchWise. coerce_numeric logical. TRUE, values QC_num coerced numeric computation. columns coerced removed (warnings). See Examples. Default: FALSE.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/compute_targetVal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute_targetVal — compute_targetVal","text":"function returns list length one containing target values computed whole dataset.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/danceR_filter_worker.html","id":null,"dir":"Reference","previous_headings":"","what":"malbacR Filter Worker — danceR_filter_worker","title":"malbacR Filter Worker — danceR_filter_worker","text":"malbacR Filter Worker","code":""},{"path":"https://pmartr.github.io/malbacR/reference/danceR_filter_worker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"malbacR Filter Worker — danceR_filter_worker","text":"","code":"danceR_filter_worker(filter_object, omicsData)"},{"path":"https://pmartr.github.io/malbacR/reference/get_batch_method.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch the Logical Vector of if data has been batch corrected — get_batch_method","title":"Fetch the Logical Vector of if data has been batch corrected — get_batch_method","text":"Retrieves TRUE/FALSE statement data batch corrected","code":""},{"path":"https://pmartr.github.io/malbacR/reference/get_batch_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch the Logical Vector of if data has been batch corrected — get_batch_method","text":"","code":"get_data_batch(omicsData)"},{"path":"https://pmartr.github.io/malbacR/reference/get_batch_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch the Logical Vector of if data has been batch corrected — get_batch_method","text":"omicsData object class pepData, proData, metabData, lipidData, nmrData.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/get_batch_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch the Logical Vector of if data has been batch corrected — get_batch_method","text":"logical value specifying batch correction applied (TRUE FALSE batch correction applied)","code":""},{"path":"https://pmartr.github.io/malbacR/reference/get_batch_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch the Batch Effect Parameters — get_batch_parameters","title":"Fetch the Batch Effect Parameters — get_batch_parameters","text":"Retrieves values batch effect parameters attributes Retrieves values batch effect method name","code":""},{"path":"https://pmartr.github.io/malbacR/reference/get_batch_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch the Batch Effect Parameters — get_batch_parameters","text":"","code":"get_batch_parameters(omicsData)  get_batch_method(omicsData)"},{"path":"https://pmartr.github.io/malbacR/reference/get_batch_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch the Batch Effect Parameters — get_batch_parameters","text":"omicsData object class pepData, proData, metabData, lipidData, nmrData.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/get_batch_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch the Batch Effect Parameters — get_batch_parameters","text":"list different parameters used run batch correction character vector function name batch correction","code":""},{"path":"https://pmartr.github.io/malbacR/reference/get_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Parameters for QC-RLSC Normalization — get_params","title":"Get Parameters for QC-RLSC Normalization — get_params","text":"Obtain parameters quality control-based robust LOESS (locally estimated scatterplot smoothing) signal correction","code":""},{"path":"https://pmartr.github.io/malbacR/reference/get_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Parameters for QC-RLSC Normalization — get_params","text":"","code":"get_params(   omicsData,   block_cname,   qc_cname,   qc_ind,   order_cname,   missing_thresh,   rsd_thresh )"},{"path":"https://pmartr.github.io/malbacR/reference/get_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Parameters for QC-RLSC Normalization — get_params","text":"omicsData omicsData object (metabData, lipidData, pepData, proData) created using pmartR package, zero values already replaced NAs log transformation already applied block_cname character string giving name column omicsData$f_Data contains block (batch) information qc_cname character string giving name column omicsData$f_data contains factor variable indicating whether sample QC qc_ind character string giving value qc_cname column indicates QC sample order_cname character string giving name column omicsData$f_data contains run order missing_thresh numeric threshold, 0 1, used filtering biomolecules. See details information. value 0.5 reasonable. rsd_thresh numeric threshold used filtering metabolites. See details information. value 0.3 reasonable.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/get_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Parameters for QC-RLSC Normalization — get_params","text":"list elements final_ests (used optimal_params input  argument qcrlsc) bad_feats (features, biomolecules,  need filtered prior using qcrlsc)","code":""},{"path":"https://pmartr.github.io/malbacR/reference/get_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Parameters for QC-RLSC Normalization — get_params","text":"Use function get optimal parameter values use  subsequent call qcrlsc, well list biomolecules  removed dataset prior QC-RLSC normalization","code":""},{"path":"https://pmartr.github.io/malbacR/reference/get_params.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Parameters for QC-RLSC Normalization — get_params","text":"Dunn,W.B., Broadhurst,D., Begley,P., Zelena,E., Francis-McIntyre,S., Anderson,N., Brown,M., Knowles,J.D., Halsall,., Haselden,J.N. et al. (2011) Procedures large-scale metabolic profiling serum plasma using gas chromatography liquid chromatography coupled mass spectrometry. Nat. Protoc., 6, 1060-1083","code":""},{"path":"https://pmartr.github.io/malbacR/reference/get_params.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Parameters for QC-RLSC Normalization — get_params","text":"Lisa Bramer, Kelly Stratton","code":""},{"path":"https://pmartr.github.io/malbacR/reference/imputation.html","id":null,"dir":"Reference","previous_headings":"","what":"imputation — imputation","title":"imputation — imputation","text":"function returns pmart filter imputed missing values \"em\" method","code":""},{"path":"https://pmartr.github.io/malbacR/reference/imputation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"imputation — imputation","text":"","code":"imputation(omicsData)"},{"path":"https://pmartr.github.io/malbacR/reference/imputation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"imputation — imputation","text":"omicsData object class 'pepData', 'proData', 'metabData', 'lipidData', 'nmrData', usually created .pepData, .proData, .metabData, .lipidData, .nmrData, respectively.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/imputation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"imputation — imputation","text":"object class imputeData dataframe imputated e_data","code":""},{"path":"https://pmartr.github.io/malbacR/reference/imputation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"imputation — imputation","text":"Evan Martin, Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/imputation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"imputation — imputation","text":"","code":"library(malbacR) data(\"pmart_amide\") library(pmartR) pmart_amide <- edata_transform(pmart_amide,\"log2\") impFilt <- imputation(pmart_amide)"},{"path":"https://pmartr.github.io/malbacR/reference/normalize_qcrlsc.html","id":null,"dir":"Reference","previous_headings":"","what":"QC-RLSC Normalization — normalize_qcrlsc","title":"QC-RLSC Normalization — normalize_qcrlsc","text":"Quality control-based robust LOESS (locally estimated scatterplot smoothing) signal correction","code":""},{"path":"https://pmartr.github.io/malbacR/reference/normalize_qcrlsc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QC-RLSC Normalization — normalize_qcrlsc","text":"","code":"normalize_qcrlsc(   omicsData_filt,   optimal_params,   block_cname,   qc_cname,   qc_ind,   backtransform = FALSE,   keep_qc = FALSE )"},{"path":"https://pmartr.github.io/malbacR/reference/normalize_qcrlsc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QC-RLSC Normalization — normalize_qcrlsc","text":"omicsData_filt omicsData object (metabData, lipidData, pepData, proData) created using pmartR package, zero values already replaced NAs log transformation already applied, biomolecules identified get_params() needing removed removed optimal_params final_ests element output get_params() function (needed Span Poly_Degree values) block_cname character string giving name column omicsData_filt$f_Data contains block (batch) information. Values column must numeric. qc_cname character string giving name column omicsData_filt$f_data contains factor variable indicating whether sample QC qc_ind character string giving value qc_cname column indicates QC sample backtransform logical value indicated whether backtransform data put normalized data back scale original data. Defaults FALSE. TRUE, median y-values loess curve added normalized value biomolecule batch. keep_qc logical value determine whether include QC samples final output data (default set FALSE)","code":""},{"path":"https://pmartr.github.io/malbacR/reference/normalize_qcrlsc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"QC-RLSC Normalization — normalize_qcrlsc","text":"omicsData object class omicsData_filt, e_data contains QC-RLSC normalized values","code":""},{"path":"https://pmartr.github.io/malbacR/reference/normalize_qcrlsc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"QC-RLSC Normalization — normalize_qcrlsc","text":"function applies QC-RLSC normalization batch input data. Must use get_params function first order get optimal_params input qcrlsc.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/normalize_qcrlsc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"QC-RLSC Normalization — normalize_qcrlsc","text":"Dunn,W.B., Broadhurst,D., Begley,P., Zelena,E., Francis-McIntyre,S., Anderson,N., Brown,M., Knowles,J.D., Halsall,., Haselden,J.N. et al. (2011) Procedures large-scale metabolic profiling serum plasma using gas chromatography liquid chromatography coupled mass spectrometry. Nat. Protoc., 6, 1060-1083","code":""},{"path":"https://pmartr.github.io/malbacR/reference/normalize_qcrlsc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"QC-RLSC Normalization — normalize_qcrlsc","text":"Kelly Stratton, Lisa Bramer","code":""},{"path":"https://pmartr.github.io/malbacR/reference/optimal_span.html","id":null,"dir":"Reference","previous_headings":"","what":"Get optimal span value — optimal_span","title":"Get optimal span value — optimal_span","text":"Get optimal span value QC-RLSC normalization","code":""},{"path":"https://pmartr.github.io/malbacR/reference/optimal_span.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get optimal span value — optimal_span","text":"","code":"optimal_span(qc_data, lam = c(1, 2))"},{"path":"https://pmartr.github.io/malbacR/reference/optimal_span.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get optimal span value — optimal_span","text":"qc_data data.frame QC samples one block/batch, first column gives run order second column gives abundance value lam vector (numeric) possible polynomial degrees test loess fitting; defaults 1,","code":""},{"path":"https://pmartr.github.io/malbacR/reference/optimal_span.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get optimal span value — optimal_span","text":"list containing elements : Lambda, Alpha, MSE","code":""},{"path":"https://pmartr.github.io/malbacR/reference/optimal_span.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get optimal span value — optimal_span","text":"internal function called get_params function","code":""},{"path":"https://pmartr.github.io/malbacR/reference/optimal_span.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get optimal span value — optimal_span","text":"Lisa Bramer, Kelly Stratton","code":""},{"path":"https://pmartr.github.io/malbacR/reference/pmart_amide.html","id":null,"dir":"Reference","previous_headings":"","what":"pmartR-friendly ","title":"pmartR-friendly ","text":"data contains information 500 features 642 samples. data originated R package \"WaveICA2.0\" (see Amide_data  details) initially contained 6461 features 642 samples three batches.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/pmart_amide.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"pmartR-friendly ","text":"metabData object (see   .metabData details) e_data \\(500 \\times 643\\) data frame expression data.   row corresponds data metabolite f_data data frame \\(642 \\times 4\\) data frame feature data.   row corresponds sample column giving unique sample identifiers found e_data   column names, injection order, group information, batch information.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/pmart_amideFilt.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtered pmartR-friendly ","title":"Filtered pmartR-friendly ","text":"data originates pmart_amide dataset. However, necessary data transformations filters applied data batch correction methods theory can applied dataset can without additional alterations.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/pmart_amideFilt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Filtered pmartR-friendly ","text":"metabData object (see   .metabData details) e_data \\(500 \\times 643\\) data frame expression data.   row corresponds data metabolite f_data data frame \\(642 \\times 4\\) data frame feature data.   row corresponds sample column giving unique sample identifiers found e_data   column names, injection order, group information, batch information.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/pmart_mix.html","id":null,"dir":"Reference","previous_headings":"","what":"pmartR-friendly ","title":"pmartR-friendly ","text":"data contains information 46 features 42 samples. data originated R package \"crmn\" (see mix  details).","code":""},{"path":"https://pmartr.github.io/malbacR/reference/pmart_mix.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"pmartR-friendly ","text":"metabData object (see   .metabData details) e_data \\(46 \\times 42\\) data frame expression data.   row corresponds data metabolite f_data data frame \\(42 \\times 2\\) data frame feature data.   row corresponds sample column giving unique sample identifiers found e_data   column names batch information e_meta data frame \\(46 \\times 7\\) data frame meta information.   row corresponds meta information metabolite column giving metabolite, marking   information, internal standards information, synonyms, RI value, query, known entries","code":""},{"path":"https://pmartr.github.io/malbacR/reference/pmart_mixFilt.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtered pmartR-friendly ","title":"Filtered pmartR-friendly ","text":"data originates pmart_mix dataset. However, necessary data transformations filters applied data batch correction methods theory can applied dataset can without additional alterations.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/pmart_mixFilt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Filtered pmartR-friendly ","text":"metabData object (see   .metabData details) e_data \\(46 \\times 42\\) data frame expression data.   row corresponds data metabolite f_data data frame \\(42 \\times 2\\) data frame feature data.   row corresponds sample column giving unique sample identifiers found e_data   column names batch information e_meta data frame \\(46 \\times 7\\) data frame meta information.   row corresponds meta information metabolite column giving metabolite, marking   information, internal standards information, synonyms, RI value, query, known entries","code":""},{"path":"https://pmartr.github.io/malbacR/reference/print-tigerFilt.html","id":null,"dir":"Reference","previous_headings":"","what":"print.tigerFilt — print.tigerFilt","title":"print.tigerFilt — print.tigerFilt","text":"printing S3 object type 'tigerFilt':","code":""},{"path":"https://pmartr.github.io/malbacR/reference/print-tigerFilt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print.tigerFilt — print.tigerFilt","text":"","code":"# S3 method for tigerFilt print(filter_object)"},{"path":"https://pmartr.github.io/malbacR/reference/rank_becas.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank Batch Corrected Data — rank_becas","title":"Rank Batch Corrected Data — rank_becas","text":"function returns data.frame ranks batch corrected data supplied first last based one three different metrics, difference  R2m/R2c, coefficient variation, median distance centroids batch clusters","code":""},{"path":"https://pmartr.github.io/malbacR/reference/rank_becas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank Batch Corrected Data — rank_becas","text":"","code":"rank_becas(   omicsData_beca_list,   comparison_method = \"r2_diff\",   batch_effect_cname,   main_effect_cname,   omicsData_unnormalized = NULL )"},{"path":"https://pmartr.github.io/malbacR/reference/rank_becas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank Batch Corrected Data — rank_becas","text":"omicsData_beca_list list containing least 2 objects class 'pepData', 'proData', 'metabData',  'lipidData', 'nmrData', usually created .pepData,  .proData, .metabData,  .lipidData, .nmrData, respectively. comparison_method character string can take one following three options: r2_diff, cv, distance_pca corresponding metrics difference R2m/R2c, coefficient variation, median distance centroids batch clusters respectively batch_effect_cname character string giving name column f_data omics objects contians batch information main_effect_cname character string giving name column f_data omics objects contians treatment (main effect) information omicsData_unnormalized object class 'pepData', 'proData', 'metabData', 'lipidData', 'nmrData', usually created .pepData, .proData, .metabData, .lipidData, .nmrData, respectively containing unnormalized data (log2 transformed data), required metric difference  R2m/R2c, otherwise value can set default NULL","code":""},{"path":"https://pmartr.github.io/malbacR/reference/rank_becas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rank Batch Corrected Data — rank_becas","text":"data.frame corresponding different BECA omicsData_beca_list well corresponding rank comparing method others","code":""},{"path":"https://pmartr.github.io/malbacR/reference/rank_becas.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rank Batch Corrected Data — rank_becas","text":"Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/rank_becas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rank Batch Corrected Data — rank_becas","text":"","code":"library(malbacR) library(pmartR) data(pmart_amide) pmart_amide <- group_designation(pmart_amide, main_effects = \"group\",batch_id= \"batch\") pmart_amide_log <- edata_transform(pmart_amide,\"log2\") impObj <- imputation(pmart_amide_log) pmart_amide_imp <- apply_imputation(impObj,pmart_amide_log) pmart_amide_norm <- normalize_global(pmart_amide_imp, subset_fn = \"all\", norm_fn = \"median\",                                     apply_norm = TRUE, backtransform = TRUE) pmart_amide_imp_raw <- edata_transform(pmart_amide_imp,\"abundance\") pmart_combat <- bc_combat(pmart_amide_norm) #> Found3batches #> Adjusting for0covariate(s) or covariate level(s) #> Standardizing Data across genes #> Fitting L/S model and finding priors #> Finding parametric adjustments #> Adjusting the Data pmart_serrf <- bc_serrf(pmart_amide_imp_raw,\"group\",\"QC\",\"group\") #> Joining with `by = join_by(batch)` pmart_serrf <- edata_transform(pmart_serrf,\"log2\") pmart_power <- bc_power(pmart_amide_imp) pmart_qcrfsc <- bc_qcrfsc(pmart_amide_imp_raw,qc_cname = \"group\",qc_val = \"QC\",                           order_cname = \"Injection_order\",group_cname = \"group\") pmart_qcrfsc <- edata_transform(pmart_qcrfsc,\"log2\") pmart_range <- bc_range(pmart_amide_imp) becas = list(ComBat = pmart_combat,SERRF = pmart_serrf,Power = pmart_power,              QCRFSC = pmart_qcrfsc,Range = pmart_range) r2_diff_ranking = rank_becas(omicsData_beca_list = becas,comparison_method = \"r2_diff\",                              omicsData_unnormalized = pmart_amide_log,                              main_effect_cname = \"group\",                             batch_effect_cname = \"batch\")"},{"path":"https://pmartr.github.io/malbacR/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. foreach %dopar% magrittr %>%","code":""},{"path":"https://pmartr.github.io/malbacR/reference/run_TIGER_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"run_TIGER_internal — run_TIGER_internal","title":"run_TIGER_internal — run_TIGER_internal","text":"Use TIGER algorithm eliminate technical variation metabolomics data. TIGER supports targeted untargeted metabolomics data competent perform intra- inter-batch technical variation removal.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/run_TIGER_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run_TIGER_internal — run_TIGER_internal","text":"","code":"run_TIGER_internal(   test_samples,   train_samples,   col_sampleID,   col_sampleType,   col_batchID,   col_order = NULL,   col_position = NULL,   targetVal_external = NULL,   targetVal_method = c(\"mean\", \"median\"),   targetVal_batchWise = FALSE,   targetVal_removeOutlier = !targetVal_batchWise,   selectVar_external = NULL,   selectVar_corType = c(\"cor\", \"pcor\"),   selectVar_corMethod = c(\"pearson\", \"spearman\"),   selectVar_minNum = 5,   selectVar_maxNum = 10,   selectVar_batchWise = FALSE,   mtry_percent = seq(0.2, 0.8, 0.2),   nodesize_percent = seq(0.2, 0.8, 0.2),   ...,   parallel.cores = 2 )"},{"path":"https://pmartr.github.io/malbacR/reference/run_TIGER_internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run_TIGER_internal — run_TIGER_internal","text":"test_samples (required) data.frame containing samples corrected (example, subject samples). data.frame contain columns sample ID (required): name label sample, sample type (required): indicating type sample, batch ID (required): batch sample, order information (optional): injection order temporal information sample, position information (optional): well position sample, metabolite values (required): values normalised. Infinite values allowed. Row: sample. Column: variable. See Examples. train_samples (required) data.frame containing quality control (QC) samples used model training. columns data.frame correspond columns test_samples. test_samples train_samples identical column names. col_sampleID (required) character string indicating name column specifies sample ID sample. values column affect data correction process can act labels different samples. See Examples. col_sampleType (required) character string indicating name column specifies type (QC1, QC2, subject) sample. column can used indicate different kinds QC samples train_samples. QC samples type type name. See Examples. col_batchID (required) character string indicating name column specifies batch ID sample. See Examples. col_order (optional) NULL character string indicating name column contains injection order temporal information (numeric values). can explicitly ask algorithm capture technical variation introduced injection order, might useful data obvious temporal drifts. NULL (default), train_samples test_samples column contains injection order information. col_position (optional) NULL character string indicating name column contains well position information (numeric values). can explicitly ask algorithm capture technical variation introduced well position, might useful well position great impact data acquisition. NULL (default), train_samples test_samples column contains well position information. targetVal_external (optional) list generated function compute_targetVal. See Details. targetVal_method character string specifying target values computed. Can \"mean\" (default) \"median\". Ignored list external target values assigned  targetVal_external. targetVal_batchWise logical. TRUE, target values computed based batch, otherwise, based whole dataset. Setting TRUE might useful dataset obvious batch effects, may also make algorithm less robust. Default: FALSE. Ignored list external target values assigned  targetVal_external. targetVal_removeOutlier logical. TRUE, outliers removed computation. Outliers determined 1.5 * IQR (interquartile range) rule. recommend turning target values computed based batches. Default: !targetVal_batchWise. Ignored list external target values assigned  targetVal_external. selectVar_external (optional) list generated function select_variable. See Details. selectVar_corType character string indicating correlation (\"cor\", default) partial correlation (\"pcor\") used. Can abbreviated. Ignored list selected variables assigned selectVar_external. Note: computing partial correlations large dataset can time-consuming. selectVar_corMethod character string indicating correlation coefficient computed. One \"spearman\" (default) \"pearson\". Can abbreviated. Ignored list selected variables assigned selectVar_external. selectVar_minNum integer specifying minimum number selected metabolite variables (injection order well position regarded metabolite variables). NULL, limited, 1 least. Default: 5. Ignored list selected variables assigned selectVar_external. selectVar_maxNum integer specifying maximum number selected metabolite variables (injection order well position regarded metabolite variables). NULL, limited, number available metabolite variables. Default: 10. Ignored list selected variables assigned selectVar_external. selectVar_batchWise (advanced) logical. Specify whether variable selection performed based batch. Default: FALSE. Ignored list selected variables assigned selectVar_external. Note: support batch-wise variable selection provided data requiring special processing (example, data strong batch effects). case, batch-wise variable selection necessary. Setting TRUE can make algorithm less robust. mtry_percent (advanced) numeric vector indicating percentages selected variables randomly sampled candidates split training random forest models (base learners). Note: providing arguments include base learners ensemble model, increase processing time. Default: seq(0.2, 0.8, 0.2). nodesize_percent (advanced) numeric vector indicating percentages sample size used minimum sizes terminal nodes random forest models (base learners). Note: providing arguments include base learners ensemble model, increase processing time. Default: seq(0.2, 0.8, 0.2). ... (advanced) optional arguments (except mtry nodesize) passed randomForest model training. Arguments mtry nodesize determined mtry_percent nodesize_percent. See randomForest Examples. Note: providing arguments include base learners ensemble model, increase processing time. parallel.cores integer (== -1 >= 1) specifying number cores parallel computation. Setting -1 run cores. Default: 2.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/run_TIGER_internal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run_TIGER_internal — run_TIGER_internal","text":"return tiger batch corrected results","code":""},{"path":"https://pmartr.github.io/malbacR/reference/scale_method.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform scale method on data — scale_method","title":"Perform scale method on data — scale_method","text":"function modified version function ScalingMethods  package DiffCorr, allows missing values Power Range scaling","code":""},{"path":"https://pmartr.github.io/malbacR/reference/scale_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform scale method on data — scale_method","text":"","code":"scale_method(   data,   methods = c(\"auto\", \"range\", \"pareto\", \"vast\", \"level\", \"power\") )"},{"path":"https://pmartr.github.io/malbacR/reference/scale_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform scale method on data — scale_method","text":"data data matrix data frame object row biomolecule column sample replicate methods string character specifying pre-treatment method can  \"auto\", \"range\", \"pareto\", \"vast\", \"level\", \"power\"","code":""},{"path":"https://pmartr.github.io/malbacR/reference/scale_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform scale method on data — scale_method","text":"data matrix data frame object (depending input) undergone pre-treatment method","code":""},{"path":"https://pmartr.github.io/malbacR/reference/scale_method.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform scale method on data — scale_method","text":"Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/scale_method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform scale method on data — scale_method","text":"","code":"library(malbacR) data(pmart_amide) malbacR:::scale_method(pmart_amide$e_data[,-1]) #>            15       22         29         37         56         84         99 #> QC1 0.3229682 2.039122  0.5416895 -0.2909551 -0.4249079  0.6246719 -0.1193757 #> A2  0.3848103 1.789011 -0.7172372 -0.5379632  1.1602029 -0.1137703 -0.2489140 #>            109         121      127       132       135      148      169 #> QC1 -0.4070221  7.26589357 2.402938 0.8449770 -1.626069 2.814834 1.216316 #> A2  -0.4061881 -0.07845704 1.882921 0.5735986 -1.875006 1.934295 2.921914 #>           219         247        270       273       281        287        291 #> QC1 0.8107065 -0.73298279 -0.1493601 0.6196262 -1.452175 -0.5046256 -0.5483448 #> A2  0.3362388 -0.09323999 -1.3690062 0.4164327 -0.525970 -1.3456402 -1.8404359 #>            309       316      320        330        349      355        361 #> QC1 -0.4438088 -1.704723 2.716954 -0.4942052 -0.5066308 1.546147 -0.3399787 #> A2  -0.3108929 -1.083401 1.881935 -0.2298145 -0.5025743 1.518262 -1.0212615 #>            369        393        418      421        423        436        441 #> QC1 -0.6318109 -0.8442313  0.2578461 0.466109 -0.2762663 -0.6476965 -0.8784945 #> A2  -0.9354024 -0.8262577 -0.5604893 2.148440  0.1003030 -1.3133996 -0.6905645 #>           455       462      465      470        474        485       492 #> QC1  1.505111 0.8881880 2.791305 6.332545 0.33600052 -0.8749981 -1.343969 #> A2  -1.802509 0.6613682 2.119549 1.341552 0.06300673 -0.9008047 -1.252021 #>           500        501          504       514         526        532      533 #> QC1 0.9718567 -0.8770814 -0.171526715  2.762716 -0.05282987 -0.1790219 1.159030 #> A2  1.0352084  0.6434513  0.002514825 -0.646898 -0.27552314 -0.5642992 1.292827 #>            536        557        570      597       598        610        648 #> QC1 -0.3050493 -1.3706692  0.4742124 1.493864 0.8581414 -0.9919277 -0.7704648 #> A2  -0.4483967 -0.6457875 -0.5271703 2.187279 0.9847246 -1.0232581 -0.7275805 #>           664        676       717       719        724       729      731 #> QC1 -2.518490 -0.1365824 0.3703581 0.6389016 -0.7397672 -0.841564 1.910001 #> A2  -1.551547 -0.1298700 3.1340271 0.5454089  1.1240181 -1.027025 1.596704 #>            733        751        753       785       797      818       846 #> QC1 0.05086182  1.1980879 -0.4647608 0.4138424 -1.559799 2.148230 -1.607207 #> A2  0.08741350 -0.6582574 -0.3247130 1.2136635  2.443568 1.773451 -2.104583 #>               858        867       878        894      912       934      966 #> QC1  0.0006943363 -0.3864710 -1.638346 -0.9931159 1.254218 -2.121476 1.123933 #> A2  -0.4763108021 -0.4749282 -1.232968 -0.9858730 2.378998 -1.764747 1.839594 #>            983        989        990       1017      1059     1069        1073 #> QC1 -1.8472887 -1.2924703 -0.2073141 -0.9887641 0.5110391 2.597119 -0.13805641 #> A2  -0.9428239 -0.2220234  0.3307383 -0.7269120 0.7131207 1.703223 -0.05449312 #>          1101      1115      1128        1129       1134      1139       1148 #> QC1 -0.885500 -1.344678 -1.074713 -0.83786949 -1.0422868 0.7775182 -0.4069299 #> A2  -1.659768 -1.248840  0.236856 -0.09597577 -0.6156985 0.6524808 -0.4418681 #>           1154       1167     1172      1190       1191       1200       1218 #> QC1 -0.3701281 -0.2196705 3.823404 0.3982628 0.01914087 -0.6764996 -0.2548228 #> A2  -0.3572635 -0.2291937 1.391218 0.5723571 2.99737244 -0.7286500  0.1595146 #>           1221       1222      1242     1253       1265        1266       1301 #> QC1 -0.2010860 -0.9166023 1.4245873 1.946883 -1.0985897  0.77609539 -0.2647108 #> A2  -0.9303581  0.7118552 0.9824527 1.845230  0.4709444 -0.08945707  1.4471450 #>         1317       1328       1340      1354      1360       1381      1421 #> QC1 2.131135 -0.8987753  0.4506765 0.5840192  1.668178 -0.4944618 1.9128642 #> A2  2.158729 -1.4360070 -0.5859816 1.2135787 -1.514329  0.4311298 0.3768337 #>           1446        1452       1459       1463      1474       1491      1498 #> QC1 -0.0666253 -0.03254151  1.0285008 -0.8993476 -1.043287 -0.8125421 -1.038639 #> A2   8.4439360 -0.18034888 -0.3286192 -0.9652367 -1.079629 -0.8978624 -1.024350 #>           1522       1530       1533      1544      1572       1580       1596 #> QC1 -0.5584622 -1.2164485 -0.1435166 -1.811060 -1.715875 -0.6734884 -1.0478010 #> A2  -0.6552943 -0.4986076 -0.5197581 -1.548322 -1.089689 -1.0155446 -0.2777571 #>          1611     1639     1659      1668      1696        1706      1749 #> QC1 0.2017795 1.998447 -1.21174 -1.090229 0.3579287 -0.27319415 -1.014598 #> A2  0.4666333 1.325422  1.44618 -1.387270 0.5767126  0.01645352 -1.048734 #>         1760       1766      1783       1790      1791      1799       1813 #> QC1       NA -0.3507569        NA 0.50879272 0.6118634 -1.147893 -2.0294972 #> A2  -1.45392 -0.7995521 -1.953447 0.09843346 1.8228334 -1.423385  0.5661737 #>           1820        1822       1833        1838      1839       1841 #> QC1 -0.2579466 -0.43649939 -1.0353521 -0.04796472 0.3128500 -0.1476402 #> A2   0.6550549  0.01165884 -0.9814099 -0.09109838 0.2289883 -0.5240471 #>          1858      1895       1926      1937     1942        1948     1949 #> QC1 -1.508615 0.7463626 -0.5911566 -1.066744 2.476701 -0.05337846 5.282281 #> A2  -1.370758 3.4638570  8.1672924 -1.171206 2.850727  0.03491282 1.748605 #>          1956       1957       1966     1993       2012        2016       2017 #> QC1 0.2919371 -1.1933378 -0.1514888 1.917367 -0.8390290  0.06953321  0.2287501 #> A2  0.4312282 -0.9647548 -0.4029938 1.577971 -0.9298502 -1.42009050 -0.4942613 #>         2018      2033       2043     2053     2079      2087       2110 #> QC1 1.406807 1.2150616 -0.8667929 4.721850 1.879914 0.2354504 -1.1786656 #> A2  1.694162 0.2148333 -0.5849065 5.609762 1.089469 2.0362889 -0.4190543 #>           2117      2137      2152     2153        2156      2159       2167 #> QC1  3.5679087 0.9844032 2.8459373 3.881284  0.08943937 -1.354479 -0.1765036 #> A2  -0.4979736 0.5815631 0.7755201 3.834716 -0.15226168 -1.476076  1.5010750 #>          2177       2178       2181       2189       2221      2265        2281 #> QC1 -1.961450 -0.4242284 -0.9210079 -0.1238923 -1.1194561 0.9206461 -0.06287945 #> A2  -1.337225  1.5952558  2.1787758 -0.3860040 -0.8748334 2.0760923 -0.31193615 #>           2283       2300     2312       2319       2330          2347 #> QC1 -0.5256353 -0.4784610 2.239788  0.1279351 -0.6482807 -0.0004549571 #> A2  -0.4462968 -0.6145242 1.601194 -0.3680631 -0.6638287  0.2047474516 #>          2378        2426       2432       2461       2482       2483 #> QC1 -1.398966  0.04543608  0.0821855 -0.4057521 -0.2756552 -0.1460246 #> A2   1.217059 -0.45681303 -0.3124342 -0.2120331 -0.3252404 -0.1358085 #>           2492        2496     2499     2513      2542       2543       2578 #> QC1  0.2868124 -0.05520765 2.131537 1.092425 0.8649437  0.4104692  0.2301155 #> A2  -0.4196691 -0.14537074 2.008041 1.559027 0.8999781 -0.1288641 -0.9285980 #>           2580       2587       2597     2624      2625       2643       2652 #> QC1 -0.6342846 -0.1646116  1.5016299 1.820248 1.7443680 -0.1263227 -0.9686116 #> A2   1.4502288 -1.1627801 -0.3130219 1.540914 0.7296079 -0.1296125  1.1308632 #>          2722        2752       2762       2778        2802      2809      2813 #> QC1 0.4697995 -0.03760808 -0.5596366 -0.2216327 -0.01151044 0.4730039 0.6181459 #> A2  2.1795036 -0.82688937 -0.5696002 -0.2314278 -0.08762674 0.8753116 0.1092516 #>           2815        2822      2833      2840     2841       2849      2858 #> QC1  0.2249734  0.08113629 1.3214537        NA 2.247206 0.08901589 1.5202546 #> A2  -0.5147757 -0.35473420 0.9602435 -1.333747 2.195236 1.97461872 0.6553892 #>           2866      2884       2900      2904      2922       2964        2966 #> QC1  0.8071131 0.3646936 -0.8466055 -1.447615 1.0156619 -0.1416918  0.01454369 #> A2  -1.1956257 1.3641351 -0.8700725 -1.657174 0.2086692 -0.7748639 -0.28188031 #>          2984       3042       3045       3068     3070     3101      3123 #> QC1 1.1691323  0.2493340 -0.1349900  1.4028382 1.074128 2.341279 -1.473643 #> A2  0.3269442 -0.2707809  0.2798821 -0.4683148 4.234880 3.352743 -1.140687 #>            3144     3153        3175     3189        3193       3200       3210 #> QC1  0.01795814 3.889027 -0.16363420 1.153958 0.138181279  0.5644392 -0.4826531 #> A2  -0.06604458 1.678270  0.03925917 2.173988 0.009709383 -0.5016708 -0.5674923 #>         3217       3255       3286       3292       3306      3333      3354 #> QC1 1.814625 0.08218264 -0.1239421  0.2410561  0.8758002 2.3721163 0.9866673 #> A2  1.382926 0.13137291 -0.5324178 -0.2542958 -0.1490332 0.6365696 7.3058422 #>           3366      3372     3379      3388     3418       3421       3428 #> QC1  0.2119950 -0.322939 1.209216 -1.989747 1.380077 -0.9974613 -0.6557717 #> A2  -0.1811672  2.435758 1.769505 -2.200547 1.233205 -0.9786089 -0.6329632 #>          3476       3486        3505       3506     3514       3523       3525 #> QC1 0.5103245 -0.7110464  0.04026592 2.06519790 1.007226 0.58205723 -0.1660213 #> A2  0.3408504 -0.7494622 -0.20711083 0.05389075 1.595197 0.03362029 -0.3624595 #>          3551       3552     3556      3565     3580       3586      3598 #> QC1 0.5540938 -0.1766867 2.284091 0.6650919 2.252718 -0.8874526 1.2578895 #> A2  1.1867155 -0.1097271 1.152482 6.8221616 2.478513 -0.9171725 0.2177638 #>          3616     3662     3682      3686      3700      3702      3747 #> QC1 0.3783782 1.683040 4.886775 0.6257618 0.6216017 2.1876939 -1.355732 #> A2  0.5238541 1.508106 1.183950 0.8149599 0.4562689 0.6555605 -1.379146 #>         3760       3774      3788       3789      3796       3805      3821 #> QC1 2.620169 -0.1999991 -1.070527 -0.1681277 0.7723554 0.05962799 1.2728837 #> A2  2.233399  0.2452229 -2.253001  2.1249120 5.1673038 0.26224374 0.3783261 #>         3822      3863       3869      3910       3912       3913     3914 #> QC1 1.492819 0.6953948 -0.4209908 3.0949124 -0.5126350 -1.0217488 1.410837 #> A2  1.056740 0.6140603  1.2699738 0.3790122  0.7465466 -0.7155032 4.819087 #>           3917     3937     3940      3979       3990     3992     3997 #> QC1  0.8987375 0.946810 3.358204 0.5092770 -0.4890815 0.869913 2.050539 #> A2  -0.3188727 1.887637 3.173129 0.1009206 -0.6181150 3.038354 4.429505 #>           4012       4049      4050      4059      4063      4065     4072 #> QC1 0.06792905  0.8682990 0.6721838 -1.180484 0.1149080 0.1536492 1.822470 #> A2  1.73774599 -0.2781689 0.3668957 -1.224969 0.2139603 0.2769246 0.291147 #>         4075       4078       4084       4092       4096       4115     4136 #> QC1 3.940624  0.8665703 -0.8727685  0.2359286 -0.2202633  0.3876823 3.169119 #> A2  3.570080 -0.4955195 -1.0120296 -0.2912330  0.2619541 -0.6775204 2.823946 #>          4141      4147       4156       4158      4182      4204     4207 #> QC1 0.0891138 0.5260106 -0.2633316 -0.8770854 0.1974880 0.6380425 1.878380 #> A2  0.7391925 0.5005985 -0.9416963  2.0278553 0.7269865 1.1485207 1.004544 #>          4208       4211      4212      4222      4225     4236      4246 #> QC1 1.1828505 -0.6014792 -1.193135 -1.299793 0.8161236 1.322777        NA #> A2  0.1092468  1.7843736        NA  2.158752 2.6902395 2.514504 -1.895317 #>          4254        4257      4277       4281        4318     4343       4344 #> QC1 1.1934710 -0.30153772 0.6716656  0.8919319  0.04044242 1.622659 -0.3250718 #> A2  0.5443636  0.03038567 1.6181402 -0.9720204 -0.40741946 1.587569 -0.3963790 #>           4356      4387      4396       4401       4405     4425       4430 #> QC1 -0.8241689 -1.888953 0.2782336  1.4457995 -0.5119215 3.169740 -0.0997416 #> A2  -0.7672410 -1.763008 3.5498799 -0.6860611         NA 1.139023 -0.3824962 #>          4436       4439     4454      4455      4477       4486       4499 #> QC1 0.8319791 -0.9834766 1.541786 0.3653004 0.8338971 -0.3432415 -0.6505222 #> A2  1.3898612         NA 1.420687 0.1821327 2.0120770 -0.8498334  1.0310338 #>         4503     4504       4508       4567        4589       4590     4633 #> QC1 1.773708 3.277079  0.3119125 -0.3484117 -0.05680038 -0.1428746 -1.47768 #> A2  1.667212 1.973516 -0.1131127 -1.0506233 -0.63711990 -0.1904569 -1.80992 #>          4650      4664     4666       4669      4672       4686       4707 #> QC1 4.6542537 1.0925235 1.562244  1.3268656 0.4629785  0.5043292  0.2097399 #> A2  0.9533283 0.2361067 1.612026 -0.3807206 0.5872060 -0.6275836 -1.2390377 #>            4729        4730      4749       4771     4775       4782       4839 #> QC1 -0.08022234 -0.01566779 0.0324556  0.3103484 1.102279 -0.5758984  0.8590488 #> A2   0.72323114 -0.02735483 1.1850853 -0.3534710 1.685462 -0.7853965 -0.7733356 #>           4846       4879       4907       4934      4939       4948       4978 #> QC1  0.7184647  0.2290017 -0.9803596         NA 1.4468658 -0.3317513 -0.7365562 #> A2  -0.2869199 -0.2409351 -0.8325763 -0.3533132 0.1190894 -0.4418995 -0.8576025 #>           5026       5036     5040        5046       5048       5051     5057 #> QC1  0.2900596  0.7417247 5.080520 -0.02233983  1.0771108  0.3003371 1.443322 #> A2  -0.7118871 -0.2934502 4.900818 -0.73681945 -0.7380219 -0.2492167 1.500859 #>         5071       5077        5084       5092      5094       5098      5121 #> QC1 1.217559 -0.8899357  0.07745685  0.3598251 -1.293481 -0.6620963 2.0084869 #> A2  1.598339 -0.6035911 -0.26022648 -0.9867064 -1.098942 -0.5468573 0.8001717 #>           5123      5136       5147      5148      5160       5161      5163 #> QC1  0.9381693 -1.977082  0.9280542 -1.105133 0.1981178 -0.2229897 -1.320652 #> A2  -0.9863614 -1.876760 -0.6168047 -1.091758 0.3934824  0.5460640 -1.390486 #>         5171      5191        5199       5203      5253      5259       5261 #> QC1 1.560664 -1.181754  0.06860532  0.1752711 -1.600379 1.5848514 -0.1630228 #> A2  1.284286 -1.046057 -0.43986623 -0.9178197 -1.811966 0.2124182 -0.2848913 #>          5288       5300       5307       5353       5388       5390     5391 #> QC1 0.8966790  4.3894499  0.7577284  1.5316162 -0.9526031 -0.6145415 0.949059 #> A2  0.9018006 -0.2364019 -0.4250365 -0.8335681 -1.4221144 -0.3135274 0.524678 #>           5400      5410       5416        5447       5458     5474     5488 #> QC1 -0.5389659 0.5595134 -0.5537571 -0.04092517 -0.9774064 2.095749 2.703781 #> A2  -0.5337890 0.4066782 -0.5346455 -0.69020856  1.2110178 2.107913 2.120569 #>           5491       5504       5510      5522        5543       5577 #> QC1 -0.8845051 -0.4396685 -0.9880017 0.1821659  0.06951474 1.05041336 #> A2  -1.0103163 -0.2920614 -0.3753821 0.8115854 -0.30424504 0.06401632 #>           5591       5592       5603       5612       5630      5632       5645 #> QC1 -0.3014421  1.5849050 -0.6064398  1.2261955 -0.9230935 -1.096218  0.1593672 #> A2  -0.5705839 -0.6853488 -0.4468399 -0.3702126 -1.2301226 -1.300713 -0.4749869 #>           5663      5666       5673      5685       5694       5704 #> QC1 -0.1314736 0.2220685  0.8193501 0.4004754 -0.2130524 -0.2984379 #> A2  -0.5342674 2.3027214 -0.3787304 0.4121886 -0.2692119 -0.2151330 #>             5711       5724       5729      5736       5738     5742       5744 #> QC1 -0.736165200 -0.4831316 0.06784327 0.5702397 -0.1082101 1.251203 -0.8231985 #> A2  -0.009005807 -0.1950374         NA 0.5724355  1.0469926 0.160697 -0.6951920 #>          5748       5763       5772       5781      5788        5793 #> QC1 -1.201468  0.6713714  0.1075849  0.2162503        NA  0.55097249 #> A2  -1.324874 -0.4383112 -0.5557482 -0.6136150 -1.250865 -0.08384785 #>            5795       5831     5838        5854       5862      5880 #> QC1  0.05933862 -0.3959536 1.221806  0.02323118  0.2783523 -1.599752 #> A2  -0.12770810 -0.6142750 1.192980 -0.26937251 -0.4484397 -1.591364 #>            5897       5914      5922     5932       5936      5939       5953 #> QC1 -1.11825931 -0.7626555 -1.075943 1.218446  0.3088961 -1.589822 -0.1807972 #> A2   0.08554798 -1.6052968 -1.176397 1.077666 -0.4362423  2.065458 -1.0660418 #>           5987       6003         6017       6035        6037       6070 #> QC1 0.08795929 -0.3001496 -0.559801212 -0.9883227 -1.43859603 -1.7634525 #> A2  0.15313578  4.6856932  0.009662141 -1.1944562 -0.06786623  0.3029827 #>           6083       6091       6126       6134      6138       6157       6161 #> QC1  0.5695997  0.4974936 -0.4523079 -0.6054852 -1.328694 -0.3026783 -0.2801805 #> A2  -0.5667095 -0.7012031  0.7305252  2.4859685  0.661883  0.3018789  2.2891246 #>            6175      6177      6184      6217       6245        6250       6256 #> QC1 -1.18771685 0.7798946 0.2059781 -1.458809  0.3230023  1.15649054 0.03746006 #> A2  -0.02297007 0.3516030 1.4960929  1.406602 -0.4440383 -0.07457964 1.87475662 #>          6273        6275      6276      6282      6290 6295       6308 #> QC1 0.4164460 -0.02243076 -1.095013 0.6199173 -1.256220   NA -0.8550319 #> A2  0.2868591 -1.00045147  1.588439 0.1249956 -1.251146   NA -0.9180902 #>          6319       6325     6326     6337      6338      6365       6374 #> QC1 -1.268433 -0.4710624 2.417461 1.120287 0.9574018 0.3952302 -0.5685113 #> A2  -1.261247 -0.3581215 2.643974 1.167909 1.0559612 0.2906608 -0.7612349 #>           6375     6415      6426     6440 #> QC1 -0.5719582 1.000770  0.320075 1.017147 #> A2  -0.6197121 1.230673 -0.386257 1.053366 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 640 rows ]"},{"path":"https://pmartr.github.io/malbacR/reference/select_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"select_variable — select_variable","title":"select_variable — select_variable","text":"function provides advanced option select metabolite variables external dataset(s). selected variables (list) can passed argument selectVar_external function run_TIGER customised data correction.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/select_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"select_variable — select_variable","text":"","code":"select_variable(   train_num,   test_num = NULL,   train_batchID = NULL,   test_batchID = NULL,   selectVar_corType = c(\"cor\", \"pcor\"),   selectVar_corMethod = c(\"spearman\", \"pearson\"),   selectVar_minNum = 5,   selectVar_maxNum = 10,   selectVar_batchWise = FALSE,   coerce_numeric = FALSE )"},{"path":"https://pmartr.github.io/malbacR/reference/select_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"select_variable — select_variable","text":"train_num numeric data.frame including metabolite values training samples (can quality control samples). Information injection order well position need excluded. Row: sample. Column: metabolite variable. See Examples. test_num optional numeric data.frame including metabolite values test samples (can subject samples). provided, column names test_num correspond column names train_num. Row: sample. Column: metabolite variable. NULL, variables selected based train_num . See Examples. train_batchID NULL vector corresponding train_num specify batch sample. Ignored selectVar_batchWise = FALSE. See Examples. test_batchID NULL vector corresponding test_num specify batch sample. Ignored selectVar_batchWise = FALSE. See Examples. selectVar_corType character string indicating correlation (\"cor\", default) partial correlation (\"pcor\") used. Can abbreviated. See Details. Note: computing partial correlations large dataset can time-consuming. selectVar_corMethod character string indicating correlation coefficient computed. One \"spearman\" (default) \"pearson\". Can abbreviated. See Details. selectVar_minNum integer specifying minimum number selected variables. NULL, limited, 1 least. See Details. Default: 5. selectVar_maxNum integer specifying maximum number selected variables. NULL, limited, ncol(train_num) - 1 . See Details. Default: 10. selectVar_batchWise (advanced) logical. Specify whether variable selection performed based batch. Default: FALSE. Note: TRUE, batch ID sample required. support batch-wise variable selection provided data requiring special processing (example, data strong batch effects). case, batch-wise variable selection necessary. Setting TRUE might make algorithm less robust. See Details. coerce_numeric logical. TRUE, values train_num  test_num coerced numeric computation. columns coerced removed (warnings). See Examples. Default: FALSE.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/select_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"select_variable — select_variable","text":"function returns list length one containing selected variables computed whole dataset.","code":""},{"path":"https://pmartr.github.io/malbacR/reference/tiger_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"TIGER filtering — tiger_filter","title":"TIGER filtering — tiger_filter","text":"function returns object class 'tigerFilt' filtered ensure  TIGER batch correction can run successfully","code":""},{"path":"https://pmartr.github.io/malbacR/reference/tiger_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TIGER filtering — tiger_filter","text":"","code":"tiger_filter(omicsData, sampletype_cname, test_val)"},{"path":"https://pmartr.github.io/malbacR/reference/tiger_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TIGER filtering — tiger_filter","text":"omicsData object class 'pepData', 'proData', 'metabData', 'lipidData', 'nmrData', usually created .pepData, .proData, .metabData, .lipidData, .nmrData, respectively. sampletype_cname character string giving name column omicsData$f_data contains sample type information (quality control samples) test_val character string giving name value within column sampletype_cname used testing value TIGER","code":""},{"path":"https://pmartr.github.io/malbacR/reference/tiger_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TIGER filtering — tiger_filter","text":"Object tigerFilt class","code":""},{"path":"https://pmartr.github.io/malbacR/reference/tiger_filter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TIGER filtering — tiger_filter","text":"Damon Leach","code":""},{"path":"https://pmartr.github.io/malbacR/reference/tiger_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TIGER filtering — tiger_filter","text":"","code":"library(malbacR) library(pmartR) data(pmart_amide) pmart_amide <- group_designation(pmart_amide,main_effects = \"group\",batch_id = \"batch\") tigerFilt <- tiger_filter(omicsData = pmart_amide,sampletype_cname = \"group\", test_val = \"QC\") pmart_amide_filt <- apply_tigerFilt(filter_object = tigerFilt,omicsData = pmart_amide) #> There are no molecules that need to be removed. Returning the original omicsData amide_tiger <- bc_tiger(omicsData = pmart_amide_filt, sampletype_cname = \"group\", test_val = \"QC\",group_cname = \"group\") #> + Initialising...   2024-02-13 11:04:48 #> + Computing target values...   2024-02-13 11:04:48 #> + Selecting highly-correlated variables...   2024-02-13 11:04:48 #>   - Computing correlation coefficients... #>   - Selecting variables... #> + Data correction started.   2024-02-13 11:04:49 #>    |                                                                      | 0 % ~calculating     |==                                                                    | 2 % ~04m 53s         |===                                                                   | 4 % ~03m 60s         |====                                                                  | 5 % ~03m 35s         |=====                                                                 | 7 % ~03m 19s         |=======                                                               | 9 % ~03m 09s         |========                                                              | 11% ~03m 01s         |=========                                                             | 12% ~02m 55s         |==========                                                            | 14% ~02m 50s         |============                                                          | 16% ~02m 44s         |=============                                                         | 18% ~02m 40s         |==============                                                        | 20% ~02m 36s         |===============                                                       | 21% ~02m 33s         |=================                                                     | 23% ~02m 29s         |==================                                                    | 25% ~02m 24s         |===================                                                   | 27% ~02m 20s         |====================                                                  | 29% ~02m 16s         |======================                                                | 30% ~02m 13s         |=======================                                               | 32% ~02m 09s         |========================                                              | 34% ~02m 06s         |=========================                                             | 36% ~02m 02s         |===========================                                           | 38% ~01m 58s         |============================                                          | 39% ~01m 55s         |=============================                                         | 41% ~01m 52s         |==============================                                        | 43% ~01m 49s         |================================                                      | 45% ~01m 45s         |=================================                                     | 46% ~01m 41s         |==================================                                    | 48% ~01m 38s         |===================================                                   | 50% ~01m 35s         |=====================================                                 | 52% ~01m 31s         |======================================                                | 54% ~01m 28s         |=======================================                               | 55% ~01m 24s         |========================================                              | 57% ~01m 21s         |==========================================                            | 59% ~01m 17s         |===========================================                           | 61% ~01m 14s         |============================================                          | 62% ~01m 11s         |=============================================                         | 64% ~01m 07s         |===============================================                       | 66% ~01m 04s         |================================================                      | 68% ~01m 01s         |=================================================                     | 70% ~57s             |==================================================                    | 71% ~54s             |====================================================                  | 73% ~51s             |=====================================================                 | 75% ~47s             |======================================================                | 77% ~44s             |=======================================================               | 79% ~40s             |=========================================================             | 80% ~37s             |==========================================================            | 82% ~34s             |===========================================================           | 84% ~30s             |============================================================          | 86% ~27s             |==============================================================        | 88% ~24s             |===============================================================       | 89% ~20s             |================================================================      | 91% ~17s             |=================================================================     | 93% ~13s             |===================================================================   | 95% ~10s             |====================================================================  | 96% ~07s             |===================================================================== | 98% ~03s             |======================================================================| 100% elapsed=03m 07s #>   - Merging results... #> + Completed.   2024-02-13 11:07:59"}]
